{"version":3,"sources":["assets/solar-house.svg","assets/location.svg","assets/area.svg","assets/panel-solar.svg","Map/MapContext.js","Map/Map.js","Layers/Layers.js","redux/actions/buildingActions.js","redux/actions/types.js","redux/selectors/selectors.js","Layers/VectorLayer.js","Layers/TileLayer.js","Source/osm.js","Controls/Controls.js","Controls/FullScreenControl.js","Controls/ZoomControl.js","BuildingMenu/BuildingCard.js","BuildingMenu/BuildingContainer.js","Header.js","GridDesigner.js","DetailMenu/VerticalSlider.js","DetailMenu/DetailCard.js","DetailMenu/DetailContainer.js","GridDetail.js","App.js","serviceWorker.js","redux/reducers/buildingReducer.js","redux/reducers/index.js","redux/store.js","index.js","assets/house.svg"],"names":["module","exports","MapContext","React","createContext","useStyles","makeStyles","olMap","flex","overflow","Map","children","zoom","center","classes","mapRef","useRef","useState","map","setMap","useEffect","options","view","olView","layers","controls","mapObject","setTarget","current","undefined","getView","setZoom","setCenter","Provider","value","Box","ref","className","Layers","updateBuildingConsumption","id","hour","type","building_id","defaultBuildingConsumption","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","getBuildings","state","buildings","getBuilding","ol_uid","getProducerBuildings","filteredItems","Object","keys","dictkey","index","VectorLayer","defaultStyle","highlightStyle","renderZoom","centerSetter","zIndex","useContext","useSelector","dispatch","useDispatch","modifyBuildingListListener","e","forEachFeatureAtPixel","pixel","f","buildingOlId","getId","selIndex","indexOf","toLonLat","getCenter","coordinates","getGeometry","getInteriorPoint","getCoordinates","lonLatCoordinates","latitude","longitude","area","getArea","toFixed","polygonCoordinates","newCoordinates","element","latloncoordinates","proj4","push","getPolygonCoordinates","building_data","consumption","addBuilding","setStyle","source","VectorSource","format","OSMXML","loader","extent","resolution","projection","epsg4326Extent","transformExtent","client","XMLHttpRequest","open","addEventListener","features","readFeatures","responseText","featureProjection","getProjection","addFeatures","feature","getFeatureById","replace","reloadSelectedItems","query","send","strategy","bboxStrategy","vectorLayer","OLVectorLayer","style","minZoom","addLayer","setZIndex","removeLayer","removeEventListener","TileLayer","tileLayer","OLTileLayer","osm","olSource","Controls","FullScreenControl","fullScreenControl","FullScreen","remove","ZoomControl","Zoom","sizeBuilding","height","width","sizeAvatar","marginRight","card","display","marginLeft","marginTop","marginBottom","leftContent","rightContent","flexDirection","justifyContent","cardContentRow","margin","BuildingCard","zoomSetter","building","Card","variant","CardHeader","avatar","building_type","Avatar","src","consumer","producer","both","renderBuildingAvatar","CardContent","ToggleButtonGroup","exclusive","onChange","event","aria-label","ToggleButton","CardActionArea","onClick","locationImg","Typography","areaImg","buildingContainer","buildingList","buildingDetailButton","renderThumb","props","borderRadius","backgroundColor","CustomScrollbars","renderThumbHorizontal","renderThumbVertical","BuildingContainer","autoHide","autoHideTimeout","autoHideDuration","align","Divider","Fragment","key","Button","color","component","Link","to","fullWidth","headersData","label","href","header","paddingLeft","logo","textAlign","menuButton","fontFamily","size","toolbar","drawerContainer","padding","Header","title","mobileView","drawerOpen","setState","setResponsiveness","window","innerWidth","prevState","getDrawerChoices","RouterLink","textDecoration","MenuItem","pageLogo","toUpperCase","getMenuButtons","AppBar","Toolbar","IconButton","edge","Drawer","anchor","onClose","theme","GridDesigner","Content","styles","Style","stroke","Stroke","fill","Fill","fromLonLat","Default","BuildingHighlight","root","slider","input","CustomSlider","withStyles","thumb","border","boxShadow","track","rail","opacity","Slider","VerticalSlider","marginTitle","initialValue","setValue","orientation","defaultValue","newValue","onChangeCommitted","Input","target","Number","onBlur","inputProps","step","min","max","detailCard","cardHeader","flexGrow","cardContent","typographyStyle","sliders","DetailCard","buildingConsumption","getBuildingConsumption","i","getHourSliders","memo","DetailContainer","producerBuildings","GridDetail","App","path","Boolean","location","hostname","match","initialState","reducer","action","stateCloned","assign","combineReducers","buildingReducer","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.396fcf7e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/solar-house.8cb1a1bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/location.3d0c5526.svg\";","module.exports = __webpack_public_path__ + \"static/media/area.cab10090.svg\";","module.exports = __webpack_public_path__ + \"static/media/panel-solar.299b4573.svg\";","import React from \"react\";\nconst MapContext = new React.createContext();\nexport default MapContext;\n","import React, { useRef, useState, useEffect } from \"react\"\nimport MapContext from \"./MapContext\";\nimport { View as olView, Map as olMap } from \"ol\";\nimport { Box } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Mouse } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(() => ({\n\tolMap: {\n\t\tflex: 7,\n\t\toverflow: \"hidden\"\n\t},\n}));\n\nconst Map = ({ children, zoom, center }) => {\n\tconst classes = useStyles();\n\tconst mapRef = useRef();\n\tconst [map, setMap] = useState(null);\n\n\n\t// on component mount\n\tuseEffect(() => {\n\t\tlet options = {\n\t\t\tview: new olView({ zoom, center }),\n\t\t\tlayers: [],\n\t\t\tcontrols: [],\n\t\t};\n\t\tlet mapObject = new olMap(options);\n\t\tmapObject.setTarget(mapRef.current);\n\t\tsetMap(mapObject);\n\n\t\treturn () => mapObject.setTarget(undefined);\n\t}, []);\n\n\t// zoom change handler\n\tuseEffect(() => {\n\t\tif (!map) return;\n\n\t\tmap.getView().setZoom(zoom);\n\t}, [zoom]);\n\n\t// center change handler\n\tuseEffect(() => {\n\t\tif (!map) return;\n\n\t\tmap.getView().setCenter(center)\n\t}, [center])\n\n\treturn (\n\t\t<MapContext.Provider value={{ map }}>\n\t\t\t<Box ref={mapRef} className={classes.olMap}>\n\t\t\t\t{children}\n\t\t\t</Box>\n\t\t</MapContext.Provider>\n\t)\n}\n\nexport default Map;","import React from \"react\";\n\nconst Layers = ({ children }) => {\n\treturn <div>{children}</div>;\n};\n\nexport default Layers;","\nimport { UPDATE_BUILDING_TYPE, UPDATE_BUILDING_CONSUMPTION, ADD_BUILDING, REMOVE_BUILDING } from './types'\n\nexport const updateBuildingType = (id, type) => ({\n    type: UPDATE_BUILDING_TYPE,\n    building_id: id,\n    building_type: type\n});\n\nexport const updateBuildingConsumption = (id, hour, value) => (\n    {\n        type: UPDATE_BUILDING_CONSUMPTION,\n        building_id: id,\n        hour: hour,\n        value: value\n    }\n);\n\nexport const addBuilding = (id, longitude, latitude, area, polygonCoordinates) => ({\n    type: ADD_BUILDING,\n    building_id: id,\n    building_data: {\n        latitude: latitude,\n        longitude: longitude,\n        area: area,\n        type: \"Consumer & Producer\",\n        polygonCoordinates: polygonCoordinates,\n        consumption: defaultBuildingConsumption\n    }\n});\n\nexport const removeBuilding = (id) => ({\n    type: REMOVE_BUILDING,\n    building_id: id\n});\n\nconst defaultBuildingConsumption = {\n    0: 45,\n    1: 37,\n    2: 29,\n    3: 25,\n    4: 23,\n    5: 21,\n    6: 20,\n    7: 19,\n    8: 18,\n    9: 17,\n    10: 16,\n    11: 15,\n    12: 15.5,\n    13: 14.5,\n    14: 15,\n    15: 16,\n    16: 17,\n    17: 18,\n    18: 19,\n    19: 20,\n    20: 21,\n    21: 24.5,\n    22: 28,\n    23: 38,\n    24: 43,\n}\n\n","export const ADD_BUILDING = \"ADD_BUILDING\";\nexport const REMOVE_BUILDING = \"REMOVE_BUILDING\";\nexport const UPDATE_BUILDING_TYPE = \"UPDATE_BUILDING_TYPE\";\nexport const UPDATE_BUILDING_CONSUMPTION = \"UPDATE_BUILDING_CONSUMPTION\";","\nexport const getBuildings = state => state.buildings;\n\nexport const getBuilding = (state, ol_uid) => getBuildings(state)[ol_uid]\n\nexport const getProducerBuildings = (state) => {\n    const buildings = getBuildings(state);\n    var filteredItems = {};\n    Object.keys(buildings).map((dictkey, index) => {\n        if (buildings[dictkey].type !== \"Producer\") {\n            filteredItems[dictkey] = buildings[dictkey];\n        }\n    })\n    return filteredItems;\n}\n\nexport const getBuildingConsumption = (state, building_id) => {\n    const buildings = getBuildings(state);\n    return buildings[building_id].consumption\n}","import { useContext, useEffect, useMemo } from \"react\";\nimport MapContext from \"../Map/MapContext\";\nimport OLVectorLayer from \"ol/layer/Vector\";\nimport { Vector as VectorSource } from 'ol/source';\nimport { transformExtent } from 'ol/proj';\nimport { getArea } from 'ol/sphere';\nimport OSMXML from 'ol/format/OSMXML';\nimport { bbox as bboxStrategy } from 'ol/loadingstrategy';\nimport { toLonLat } from 'ol/proj';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { addBuilding, removeBuilding } from '../redux/actions/buildingActions'\nimport { getBuildings } from '../redux/selectors'\nimport proj4 from \"proj4\";\n\nconst VectorLayer = ({ defaultStyle, highlightStyle, renderZoom, centerSetter, zIndex = 1 }) => {\n\tconst { map } = useContext(MapContext);\n\tconst buildings = useSelector(getBuildings);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif (!map) return;\n\n\t\tlet source = new VectorSource({\n\t\t\tformat: new OSMXML(),\n\t\t\tloader: function (extent, resolution, projection) {\n\t\t\t\tvar epsg4326Extent = transformExtent(extent, projection, 'EPSG:4326');\n\t\t\t\tvar client = new XMLHttpRequest();\n\t\t\t\tclient.open('POST', 'https://overpass-api.de/api/interpreter');\n\t\t\t\tclient.addEventListener('load', function () {\n\t\t\t\t\tvar features = new OSMXML().readFeatures(client.responseText, {\n\t\t\t\t\t\tfeatureProjection: map.getView().getProjection(),\n\t\t\t\t\t});\n\t\t\t\t\tsource.addFeatures(features);\n\t\t\t\t\treloadSelectedItems(source)\n\t\t\t\t});\n\t\t\t\tvar extended_load_percentage = 0.02;\n\t\t\t\tvar stringExtent = (epsg4326Extent[1] - epsg4326Extent[1] * extended_load_percentage) + ',' + (epsg4326Extent[0] * extended_load_percentage + epsg4326Extent[0]) + ',' +\n\t\t\t\t\t(epsg4326Extent[3] * extended_load_percentage + epsg4326Extent[3]) + ',' + (epsg4326Extent[2] - epsg4326Extent[2] * extended_load_percentage);\n\t\t\t\tvar query = \"(way[building](\" + stringExtent + \");); out meta; >; out meta qt;\"\n\t\t\t\tclient.send(query);\n\t\t\t},\n\t\t\tstrategy: bboxStrategy,\n\n\t\t});\n\n\t\tlet vectorLayer = new OLVectorLayer({\n\t\t\tsource: source,\n\t\t\tstyle: defaultStyle,\n\t\t\tminZoom: renderZoom\n\t\t});\n\t\tmap.addLayer(vectorLayer);\n\t\tvectorLayer.setZIndex(zIndex);\n\n\t\treturn () => {\n\t\t\tif (map) {\n\t\t\t\tmap.removeLayer(vectorLayer);\n\t\t\t}\n\t\t};\n\t}, [map]);\n\n\n\tuseEffect(() => {\n\t\tif (!map) return;\n\t\tmap.addEventListener('singleclick', modifyBuildingListListener);\n\t\treturn () => {\n\t\t\tif (map) {\n\t\t\t\tmap.removeEventListener('singleclick', modifyBuildingListListener);\n\t\t\t}\n\t\t};\n\t}, [map, buildings]);\n\n\tfunction reloadSelectedItems(source) {\n\t\tObject.keys(buildings).map((dictkey, index) => {\n\t\t\tvar feature = source.getFeatureById(getOriginalId(dictkey));\n\t\t\tif (feature !== null) {\n\t\t\t\tfeature.setStyle(highlightStyle);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction getOriginalId(string) {\n\t\treturn string.replace(\"Building \", \"\")\n\t}\n\n\tfunction getPolygonCoordinates(coordinates) {\n\t\tvar newCoordinates = [];\n\t\tcoordinates.map(element => {\n\t\t\tvar latloncoordinates = proj4('EPSG:3857', 'WGS84', [element[0], element[1]])\n\t\t\tnewCoordinates.push(latloncoordinates);\n\t\t})\n\t\treturn newCoordinates;\n\t}\n\n\tfunction modifyBuildingListListener(e) {\n\t\tmap.forEachFeatureAtPixel(e.pixel, function (f) {\n\t\t\tvar keys = Object.keys(buildings);\n\t\t\tvar buildingOlId = \"Building \" + f.getId();\n\t\t\tvar selIndex = keys.indexOf(buildingOlId);\n\t\t\tcenterSetter(toLonLat(map.getView().getCenter()));\n\t\t\tdebugger;\n\t\t\tif (selIndex < 0) {\n\t\t\t\tvar coordinates = f.getGeometry().getInteriorPoint().getCoordinates();\n\t\t\t\tvar lonLatCoordinates = toLonLat([coordinates[0], coordinates[1]]);\n\t\t\t\tvar latitude = lonLatCoordinates[0];\n\t\t\t\tvar longitude = lonLatCoordinates[1];\n\t\t\t\tvar area = getArea(f.getGeometry()).toFixed(2);\n\t\t\t\tvar polygonCoordinates = getPolygonCoordinates(f.getGeometry().getCoordinates()[0])\n\t\t\t\tdispatch(addBuilding(buildingOlId, latitude, longitude, area, polygonCoordinates));\n\t\t\t\tf.setStyle(highlightStyle);\n\t\t\t} else {\n\t\t\t\tdispatch(removeBuilding(buildingOlId));\n\t\t\t\tf.setStyle(defaultStyle);\n\n\t\t\t}\n\t\t});\n\n\t}\n\n\treturn null;\n};\n\n\nexport default VectorLayer;","import { useContext, useEffect } from \"react\";\nimport MapContext from \"../Map/MapContext\";\nimport OLTileLayer from \"ol/layer/Tile\";\n\nconst TileLayer = ({ source, zIndex = 0 }) => {\n\tconst { map } = useContext(MapContext);\n\n\tuseEffect(() => {\n\t\tif (!map) return;\n\n\t\tlet tileLayer = new OLTileLayer({\n\t\t\tsource,\n\t\t\tzIndex,\n\t\t});\n\n\t\tmap.addLayer(tileLayer);\n\t\ttileLayer.setZIndex(zIndex);\n\n\t\treturn () => {\n\t\t\tif (map) {\n\t\t\t\tmap.removeLayer(tileLayer);\n\t\t\t}\n\t\t};\n\t}, [map]);\n\n\treturn null;\n};\n\nexport default TileLayer;\n","import * as olSource from \"ol/source\";\n\nfunction osm() {\n\treturn new olSource.OSM();\n}\n\nexport default osm;","import React from \"react\";\n\nconst Controls = ({ children }) => {\n\treturn <div>{children}</div>;\n};\n\nexport default Controls;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { FullScreen } from \"ol/control\";\nimport MapContext from \"../Map/MapContext\";\n\nconst FullScreenControl = () => {\n\tconst { map } = useContext(MapContext);\n\n\tuseEffect(() => {\n\t\tif (!map) return;\n\n\t\tlet fullScreenControl = new FullScreen({});\n\n\t\tmap.controls.push(fullScreenControl);\n\n\t\treturn () => map.controls.remove(fullScreenControl);\n\t}, [map]);\n\n\treturn null;\n};\n\nexport default FullScreenControl;","import { useContext, useEffect } from \"react\";\nimport { Zoom } from \"ol/control\";\nimport MapContext from \"../Map/MapContext\";\n\nconst ZoomControl = () => {\n    const { map } = useContext(MapContext);\n\n    useEffect(() => {\n        if (!map) return;\n\n        let fullScreenControl = new Zoom({});\n\n        map.controls.push(fullScreenControl);\n\n        return () => map.controls.remove(fullScreenControl);\n    }, [map]);\n\n    return null;\n};\n\nexport default ZoomControl;","import React, { useContext } from \"react\";\nimport consumer from \"../assets/house.svg\"\nimport producer from \"../assets/panel-solar.svg\"\nimport both from \"../assets/solar-house.svg\"\nimport locationImg from \"../assets/location.svg\"\nimport areaImg from \"../assets/area.svg\"\nimport { Avatar, CardActionArea } from '@material-ui/core';\nimport { Card } from '@material-ui/core';\nimport { CardContent } from '@material-ui/core';\nimport { CardHeader } from '@material-ui/core';\nimport { Typography } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ToggleButtonGroup } from '@material-ui/lab';\nimport { ToggleButton } from '@material-ui/lab';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { updateBuildingType } from '../redux/actions/buildingActions.js'\nimport { getBuilding } from '../redux/selectors'\n\n\n\nconst useStyles = makeStyles(() => ({\n    sizeBuilding: {\n        height: 50,\n        width: 50,\n    },\n    sizeAvatar: {\n        height: 30,\n        width: 30,\n        marginRight: 5,\n    },\n    card: {\n        display: \"flex\",\n        marginLeft: '10px',\n        marginRight: '10px',\n        marginTop: '10px',\n        marginBottom: '10px'\n    },\n    leftContent: {\n        flex: 1\n    },\n\n    rightContent: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 3,\n        justifyContent: 'space-evenly'\n    },\n\n    cardContentRow: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        margin: \"5px\"\n    }\n}));\n\nfunction BuildingCard({ ol_uid, centerSetter, zoomSetter }) {\n\n\n    const classes = useStyles();\n    const building = useSelector(state => getBuilding(state, ol_uid));\n    const dispatch = useDispatch();\n\n    const renderBuildingAvatar = (building_type) => {\n        switch (building_type) {\n            case \"Consumer\":\n                return <Avatar variant=\"square\" className={classes.sizeBuilding} src={consumer} />\n            case \"Producer\":\n                return <Avatar variant=\"square\" className={classes.sizeBuilding} src={producer} />\n            case \"Consumer & Producer\":\n                return <Avatar variant=\"square\" className={classes.sizeBuilding} src={both} />\n            default:\n                return <Avatar variant=\"square\" className={classes.sizeBuilding} src={consumer} />\n        }\n    };\n\n    const handleBuildingType = (event, value) => {\n        if (value != null) {\n            dispatch(updateBuildingType(ol_uid, value));\n        }\n    };\n\n    function changeMapCenter() {\n        centerSetter([building.longitude, building.latitude])\n    }\n\n    return (\n        <Card variant=\"outlined\" className={classes.card}>\n            <div className={classes.leftContent}>\n                <CardHeader avatar={renderBuildingAvatar(building.type)}> </CardHeader>\n                <CardContent>\n                    <ToggleButtonGroup\n                        exclusive\n                        value={building.type}\n                        onChange={handleBuildingType}\n                        aria-label=\"building type\"\n                    >\n                        <ToggleButton value=\"Consumer\" aria-label=\"left aligned\" > {\"\"} </ToggleButton>\n                        <ToggleButton value=\"Producer\" aria-label=\"centered\" > {\"\"} </ToggleButton>\n                        <ToggleButton value=\"Consumer & Producer\" aria-label=\"right aligned\" > {\"\"} </ToggleButton>\n                    </ToggleButtonGroup>\n                </CardContent >\n            </div >\n\n            <CardActionArea onClick={changeMapCenter}>\n                <CardContent className={classes.rightContent}>\n                    <div className={classes.cardContentRow}>\n                        <Avatar className={classes.sizeAvatar} variant=\"square\" src={locationImg} />\n                        <Typography> Lat {building.latitude.toFixed(4)}, Lon {building.longitude.toFixed(4)} </Typography>\n                    </div>\n                    <div className={classes.cardContentRow}>\n                        <Avatar className={classes.sizeAvatar} variant=\"square\" src={areaImg} />\n                        <Typography> {building.area} m² </Typography>\n                    </div>\n                    <div className={classes.cardContentRow}>\n                        <Typography> {building.type} </Typography>\n                    </div>\n                </CardContent>\n            </CardActionArea>\n\n        </Card >);\n}\n\nexport default BuildingCard","import React, { useContext } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core/';\nimport BuildingCard from './BuildingCard'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Button from '@material-ui/core/Button';\nimport { Divider } from '@material-ui/core';\nimport {\n    Link\n} from \"react-router-dom\";\nimport { getBuildings } from '../redux/selectors';\n\n\nconst useStyles = makeStyles(() => ({\n    buildingContainer: {\n        flex: 2,\n        display: 'flex',\n        flexDirection: \"column\",\n    },\n    buildingList: {\n        flex: 12\n    },\n    buildingDetailButton: {\n        flex: 1,\n        height: \"100%\",\n        width: \"100%\"\n    }\n}));\n\nconst renderThumb = ({ style, ...props }) => {\n    const thumbStyle = {\n        borderRadius: 6,\n        backgroundColor: 'rgba(35, 49, 86, 0.8)'\n    };\n    return <div style={{ ...style, ...thumbStyle }} {...props} />;\n};\n\nconst CustomScrollbars = props => (\n    <Scrollbars\n        renderThumbHorizontal={renderThumb}\n        renderThumbVertical={renderThumb}\n        {...props}\n    />\n);\n\nfunction BuildingContainer({ centerSetter, zoomSetter }) {\n\n    const classes = useStyles();\n    const buildingList = useSelector(getBuildings);\n\n    return (\n        <div className={classes.buildingContainer}>\n            <div className={classes.buildingList}>\n                <CustomScrollbars autoHide autoHideTimeout={500} autoHideDuration={200}>\n                    <Typography variant=\"h5\" align=\"center\"> SELECTED BUILDINGS </Typography>\n                    <Divider variant=\"middle\" />\n                    {\n                        Object.keys(buildingList).map((dictkey, index) => (\n                            <React.Fragment key={dictkey}>\n                                <BuildingCard ol_uid={dictkey} centerSetter={centerSetter} zoomSetter={zoomSetter} />\n                            </React.Fragment>\n                        ))\n                    }\n                </CustomScrollbars>\n            </div>\n            <div className={classes.buildingDetailButton}>\n                <Button color=\"primary\" component={Link} to=\"/detail\" fullWidth={true}>\n                    grid detail\n                </Button>\n            </div>\n\n        </div >\n\n    )\n\n}\n\nexport default BuildingContainer","import {\n    AppBar,\n    Toolbar,\n    Typography,\n    makeStyles,\n    Button,\n    IconButton,\n    Drawer,\n    Link,\n    MenuItem,\n} from \"@material-ui/core\";\nimport 'fontsource-roboto';\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst headersData = [\n    {\n        label: \"GRID DESIGNER\",\n        href: \"/\",\n    },\n    {\n        label: \"GRID DETAIL\",\n        href: \"/detail\",\n    },\n];\n\nconst useStyles = makeStyles(() => ({\n    header: {\n        backgroundColor: \"#5f468a\",\n        paddingLeft: \"20px\",\n        \"@media (max-width: 900px)\": {\n            paddingLeft: 0,\n        },\n    },\n    logo: {\n        color: \"#FFFEFE\",\n        textAlign: \"left\",\n        marginRight: \"25px\"\n    },\n    menuButton: {\n        fontFamily: \"Open Sans, sans-serif\",\n        size: \"18px\",\n        marginLeft: \"10px\",\n    },\n    toolbar: {\n        display: \"flex\",\n    },\n    drawerContainer: {\n        padding: \"20px 30px\",\n    },\n}));\n\nexport default function Header({ title }) {\n    const { header, logo, menuButton, toolbar, drawerContainer } = useStyles();\n\n    const [state, setState] = useState({\n        mobileView: false,\n        drawerOpen: false,\n    });\n\n    const { mobileView, drawerOpen } = state;\n\n    useEffect(() => {\n        const setResponsiveness = () => {\n            return window.innerWidth < 900\n                ? setState((prevState) => ({ ...prevState, mobileView: true }))\n                : setState((prevState) => ({ ...prevState, mobileView: false }));\n        };\n\n        setResponsiveness();\n\n        window.addEventListener(\"resize\", () => setResponsiveness());\n    }, []);\n\n    const displayDesktop = () => {\n        return (\n            <Toolbar className={toolbar}>\n                {pageLogo}\n                <div>{getMenuButtons()}</div>\n            </Toolbar>\n        );\n    };\n\n    const displayMobile = () => {\n        const handleDrawerOpen = () =>\n            setState((prevState) => ({ ...prevState, drawerOpen: true }));\n        const handleDrawerClose = () =>\n            setState((prevState) => ({ ...prevState, drawerOpen: false }));\n\n        return (\n            <Toolbar>\n                <IconButton\n                    {...{\n                        edge: \"start\",\n                        color: \"inherit\",\n                        \"aria-label\": \"menu\",\n                        \"aria-haspopup\": \"true\",\n                        onClick: handleDrawerOpen,\n                    }}\n                >\n                    <MenuIcon />\n                </IconButton>\n\n                <Drawer\n                    {...{\n                        anchor: \"left\",\n                        open: drawerOpen,\n                        onClose: handleDrawerClose,\n                    }}\n                >\n                    <div className={drawerContainer}>{getDrawerChoices()}</div>\n                </Drawer>\n\n                <div>{pageLogo}</div>\n            </Toolbar>\n        );\n    };\n\n    const getDrawerChoices = () => {\n        return headersData.map(({ label, href }) => {\n            return (\n                <Link\n                    {...{\n                        component: RouterLink,\n                        to: href,\n                        color: \"inherit\",\n                        style: { textDecoration: \"none\" },\n                        key: label,\n                    }}\n                >\n                    <MenuItem>{label}</MenuItem>\n                </Link>\n            );\n        });\n    };\n\n    const pageLogo = (\n        <Typography variant=\"h6\" component=\"h1\" className={logo}>\n            {title.toUpperCase()}\n        </Typography>\n    );\n\n    const getMenuButtons = () => {\n        return headersData.map(({ label, href }) => {\n            return (\n                <Button\n                    {...{\n                        key: label,\n                        color: \"inherit\",\n                        to: href,\n                        component: RouterLink,\n                        className: menuButton,\n                    }}\n                >\n                    {label}\n                </Button>\n            );\n        });\n    };\n\n    return (\n        <header>\n            <AppBar className={header}>\n                {mobileView ? displayMobile() : displayDesktop()}\n            </AppBar>\n            <Toolbar />\n        </header>\n    );\n}","import 'fontsource-roboto';\nimport \"ol/ol.css\"\n\nimport React, { useState } from 'react';\nimport Map from \"./Map\";\nimport { Layers, TileLayer, VectorLayer } from \"./Layers\";\nimport { osm } from \"./Source\";\nimport { Controls, FullScreenControl, ZoomControl } from \"./Controls\";\nimport { BuildingContainer, } from './BuildingMenu';\nimport { fromLonLat } from 'ol/proj';\nimport { Fill, Stroke, Style } from 'ol/style';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Header from \"./Header\"\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    GridDesigner: {\n        height: '100%',\n        width: '100%',\n    },\n    Content: {\n        height: '92%',\n        width: '98%',\n        marginTop: '1vh',\n        marginBottom: '1vh',\n        marginLeft: '1vw',\n        marginRight: '1vw',\n        overflow: \"hidden\",\n        display: 'flex',\n        flexDirection: 'row'\n    }\n}));\n\n\nlet styles = {\n    'Default': new Style({\n        zIndex: 1,\n        stroke: new Stroke({\n            color: 'rgba(246, 207, 101, 1.0)',\n            width: 1,\n        }),\n        fill: new Fill({\n            color: 'rgba(255, 242, 175, 0.5)',\n        }),\n    }),\n    'BuildingHighlight': new Style({\n        zIndex: 2,\n        stroke: new Stroke({\n            color: 'rgb(95,70,138)',\n            width: 2,\n        }),\n        fill: new Fill({\n            color: 'rgba(255,255,255,0.7)',\n        }),\n    }),\n};\n\n\nconst GridDesigner = () => {\n\n    const [center, setCenter] = useState([-3.92907, 38.98626]);\n    const [zoom, setZoom] = useState(18);\n    const classes = useStyles();\n\n    return (\n        <div className={classes.GridDesigner}>\n            <Header title=\"Grid designer\" > </Header>\n            <div className={classes.Content}>\n                <Map center={fromLonLat(center)} zoom={zoom}>\n                    <Layers>\n                        <TileLayer\n                            source={osm()}\n                            zIndex={0}\n                        />\n                        <VectorLayer\n                            defaultStyle={styles.Default} highlightStyle={styles.BuildingHighlight} renderZoom={17} centerSetter={setCenter}\n                        />\n                    </Layers>\n                    <Controls>\n                        <FullScreenControl />\n                        <ZoomControl />\n                    </Controls>\n                </Map>\n                <BuildingContainer centerSetter={setCenter} zoomSetter={setZoom} />\n            </div>\n        </div >\n    )\n};\n\nexport default GridDesigner;\n","import React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { Input, Typography } from '@material-ui/core';\nimport { useDispatch } from 'react-redux'\nimport { updateBuildingConsumption } from '../redux/actions/buildingActions.js'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"3vw\"\n    },\n    slider: {\n        height: \"19vh\",\n        marginTop: 12.5,\n    },\n    input: {\n        marginTop: 5,\n        marginLeft: 4\n    }\n\n}));\n\nconst CustomSlider = withStyles({\n    root: {\n        color: \"#5F468A\",\n    },\n    thumb: {\n        width: \"23px !important\",\n        height: \"23px !important\",\n        backgroundColor: \"#fff\",\n        border: \"2px solid currentColor\",\n        \"&:focus, &:hover,&:active\": {\n            boxShadow: \"none !important\",\n        }\n    },\n    track: {\n        width: \"12.5px !important\",\n        borderRadius: \"0 0 24px 24px\",\n        marginBottom: \"-2px\",\n    },\n    rail: {\n        width: \"10px !important\",\n        borderRadius: 24,\n        opacity: 1,\n        color: \"rgba(255, 242, 175, 1)\",\n        border: \"1px solid rgba(246, 207, 101)\",\n\n    }\n})(Slider);\n\nexport default function VerticalSlider({ ol_uid, hour, marginTitle, initialValue }) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(initialValue);\n    const dispatch = useDispatch();\n\n    const handleSliderChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleSliderCommit = (event, newValue) => {\n        dispatch(updateBuildingConsumption(ol_uid, hour, newValue));\n    }\n\n    const handleInputChange = (event) => {\n        var value = '';\n        if (event.target.value !== '') {\n            value = Number(event.target.value);\n        }\n        setValue(value)\n        dispatch(updateBuildingConsumption(ol_uid, hour, value));\n    };\n\n    const handleBlur = () => {\n        if (value < 0) {\n            setValue(0);\n            dispatch(updateBuildingConsumption(ol_uid, hour, 0));\n        } else if (value > 100) {\n            setValue(100);\n            dispatch(updateBuildingConsumption(ol_uid, hour, 100));\n        }\n    };\n\n    return (\n        <div className={classes.root}>\n            <Typography style={{ marginLeft: marginTitle }}> {hour}h </Typography>\n            <div className={classes.slider} >\n                <CustomSlider\n                    orientation=\"vertical\"\n                    aria-label=\"consumption slider\"\n                    defaultValue={0}\n                    value={typeof value === 'number' ? value : 0}\n                    onChange={handleSliderChange}\n                    onChangeCommitted={handleSliderCommit}\n                />\n            </div>\n            <div className={classes.input} >\n                <Input\n                    className={classes.input}\n                    value={value}\n                    margin=\"dense\"\n                    onChange={handleInputChange}\n                    onBlur={handleBlur}\n                    inputProps={{\n                        step: 1,\n                        min: 0,\n                        max: 100,\n                        type: 'number',\n                        'aria-labelledby': 'input-slider',\n                    }}\n                />\n\n            </div>\n        </div >\n    );\n}","import React, { useContext, useMemo } from \"react\";\nimport { CardContent, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport VerticalSlider from \"./VerticalSlider\";\nimport { Card } from '@material-ui/core';\nimport { useSelector } from 'react-redux'\nimport { Avatar } from '@material-ui/core';\nimport locationImg from \"../assets/location.svg\"\nimport areaImg from \"../assets/area.svg\"\nimport consumer from \"../assets/house.svg\"\nimport both from \"../assets/solar-house.svg\"\nimport { getBuilding, getBuildingConsumption } from \"../redux/selectors\"\n\n\nconst useStyles = makeStyles(() => ({\n    sizeBuilding: {\n        height: 50,\n        width: 50,\n        marginTop: 15,\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n    },\n    sizeAvatar: {\n        height: 30,\n        width: 30,\n        marginRight: 5,\n    },\n    detailCard: {\n        marginLeft: '10px',\n        marginRight: '10px',\n        marginTop: '10px',\n        marginBottom: '10px',\n        display: \"inline-block\",\n\n    },\n    cardHeader: {\n        flexGrow: 1,\n    },\n    cardContent: {\n        display: \"flex\",\n    },\n    cardContentRow: {\n        display: \"flex\",\n        margin: \"5px\",\n        marginBottom: \"15px\",\n    },\n    typographyStyle: {\n        flexGrow: 1,\n    },\n    sliders: {\n        display: \"flex\", height: \"25vh\",\n    }\n}));\n\nfunction DetailCard({ ol_uid }) {\n\n    const building = useSelector(state => getBuilding(state, ol_uid));\n    const buildingConsumption = useSelector((state) => getBuildingConsumption(state, ol_uid));\n    const classes = useStyles();\n\n    function getHourSliders() {\n        let sliders = [];\n        for (let i = 0; i <= 24; i++) {\n            var marginTitle = 3;\n            if (i <= 9) {\n                marginTitle = 8;\n            }\n            sliders.push(<React.Fragment key={i}> <VerticalSlider ol_uid={ol_uid} hour={i} marginTitle={marginTitle} initialValue={buildingConsumption[i]} /> </React.Fragment >)\n        }\n        return sliders\n    }\n\n\n    const renderBuildingAvatar = (building_type) => {\n        switch (building_type) {\n            case \"Consumer\":\n                return <Avatar variant=\"square\" className={classes.sizeBuilding} src={consumer} />\n            case \"Consumer & Producer\":\n                return <Avatar variant=\"square\" className={classes.sizeBuilding} src={both} />\n            default:\n                return <Avatar variant=\"square\" className={classes.sizeBuilding} src={consumer} />\n        }\n    };\n\n    return (\n        <Card variant=\"outlined\" className={classes.detailCard}>\n            <div className={classes.cardContent}>\n                <Card>\n                    {renderBuildingAvatar(building.type)}\n                    <CardContent>\n                        <div className={classes.cardContentRow}>\n                            <Typography className={classes.typographyStyle} align=\"center\"> {building.type}</Typography>\n                        </div>\n                        <div className={classes.cardContentRow}>\n                            <Avatar className={classes.sizeAvatar} variant=\"square\" src={locationImg} />\n                            <Typography> Lat {building.latitude.toFixed(4)}, Lon {building.longitude.toFixed(4)} </Typography>\n                        </div>\n                        <div className={classes.cardContentRow}>\n                            <Avatar className={classes.sizeAvatar} variant=\"square\" src={areaImg} />\n                            <Typography> {building.area} m² </Typography>\n                        </div>\n\n                    </CardContent>\n                </Card >\n                <CardContent className={classes.sliders}>\n                    {getHourSliders()\n                    }\n                </CardContent>\n            </div>\n        </Card >);\n\n\n}\n\nexport default DetailCard = React.memo(DetailCard)","import { useSelector, useDispatch } from \"react-redux\"\nimport React from \"react\"\nimport { getProducerBuildings } from \"../redux/selectors\"\nimport DetailCard from \"./DetailCard\";\n\n\n\nexport default function DetailContainer() {\n    const producerBuildings = useSelector(getProducerBuildings);\n\n    return (\n        <div>\n            {\n                Object.keys(producerBuildings).map((dictkey, index) => (\n                    <React.Fragment key={dictkey}>\n                        <DetailCard ol_uid={dictkey} />\n                    </React.Fragment>\n                ))\n            }\n        </div>\n    )\n}\n\n","import 'fontsource-roboto';\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Header from \"./Header\"\nimport { DetailContainer } from './DetailMenu';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    GridDesigner: {\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    Content: {\n        height: '93%',\n        width: '100%',\n        overflow: \"hidden\",\n        display: 'flex',\n    },\n}));\n\nconst GridDetail = () => {\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.GridDesigner}>\n            <Header title=\"Grid detail\" />\n            <DetailContainer />\n        </div >\n    )\n};\n\nexport default GridDetail;\n","import React, { useState } from 'react';\nimport GridDesigner from './GridDesigner'\nimport GridDetail from './GridDetail'\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n} from \"react-router-dom\";\n\n\nexport default function App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/detail\" component={GridDetail} />\n\t\t\t\t<Route path=\"/\" component={GridDesigner} />\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport { ADD_BUILDING, REMOVE_BUILDING, UPDATE_BUILDING_TYPE, UPDATE_BUILDING_CONSUMPTION } from '../actions/types'\n\nconst initialState = {\n    'Building 558237030': {\n        latitude: 38.98695700026889,\n        longitude: -3.928070645675773,\n        area: '995.25',\n        type: 'Consumer & Producer',\n        polygonCoordinates: [\n            [\n                -3.9282782000000003,\n                38.9868703\n            ],\n            [\n                -3.9281011000000006,\n                38.98676190000001\n            ],\n            [\n                -3.927859700000001,\n                38.98696619999996\n            ],\n            [\n                -3.927954,\n                38.98705169999999\n            ],\n            [\n                -3.9279771,\n                38.98702969999997\n            ],\n            [\n                -3.9280001,\n                38.987044799999985\n            ],\n            [\n                -3.9279753000000004,\n                38.987070899999985\n            ],\n            [\n                -3.9280674,\n                38.98714660000001\n            ],\n            [\n                -3.9282461000000004,\n                38.9871521\n            ],\n            [\n                -3.9282514,\n                38.987112200000006\n            ],\n            [\n                -3.9282302000000002,\n                38.98711079999999\n            ],\n            [\n                -3.9282302000000002,\n                38.98707919999999\n            ],\n            [\n                -3.9282601999999995,\n                38.98707919999999\n            ],\n            [\n                -3.9282613,\n                38.98706709999998\n            ],\n            [\n                -3.9282763000000003,\n                38.98689179999999\n            ],\n            [\n                -3.9282782000000003,\n                38.9868703\n            ]\n        ],\n        consumption: {\n            '0': 45,\n            '1': 37,\n            '2': 29,\n            '3': 25,\n            '4': 23,\n            '5': 21,\n            '6': 20,\n            '7': 19,\n            '8': 18,\n            '9': 17,\n            '10': 16,\n            '11': 15,\n            '12': 15.5,\n            '13': 14.5,\n            '14': 15,\n            '15': 16,\n            '16': 17,\n            '17': 18,\n            '18': 19,\n            '19': 20,\n            '20': 21,\n            '21': 24.5,\n            '22': 28,\n            '23': 38,\n            '24': 43\n        }\n    }\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UPDATE_BUILDING_TYPE: {\n            let stateCloned = Object.assign({}, state);\n            stateCloned[action.building_id].type = action.building_type;\n            return stateCloned;\n        }\n        case UPDATE_BUILDING_CONSUMPTION: {\n            let stateCloned = Object.assign({}, state);\n            stateCloned[action.building_id].consumption[action.hour] = action.value;\n            return stateCloned;\n        }\n        case ADD_BUILDING: {\n            let stateCloned = Object.assign({}, state);\n            stateCloned[action.building_id] = action.building_data;\n            return stateCloned;\n        }\n        case REMOVE_BUILDING: {\n            let stateCloned = Object.assign({}, state);\n            delete stateCloned[action.building_id]\n            return stateCloned;\n        }\n        default:\n            return state;\n    }\n\n};\n\n\nexport default reducer;","import { combineReducers } from \"redux\";\nimport buildingReducer from \"./buildingReducer\";\n\nexport default combineReducers({\n    buildings: buildingReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\n\nconst middleware = [thunk];\nconst initialState = {};\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","module.exports = __webpack_public_path__ + \"static/media/house.8680c64b.svg\";"],"sourceRoot":""}