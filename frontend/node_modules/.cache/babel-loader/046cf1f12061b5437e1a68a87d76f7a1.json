{"ast":null,"code":"var _jsxFileName = \"/home/enrique/projects/prueba/src/DetailMenu/DetailCard.js\";\nimport React, { useContext, useMemo } from \"react\";\nimport { Box, CardContent, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport VerticalSlider from \"./VerticalSlider\";\nimport { Card } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { CardHeader } from '@material-ui/core';\nimport { Avatar, CardActionArea } from '@material-ui/core';\nimport locationImg from \"../assets/location.svg\";\nimport areaImg from \"../assets/area.svg\";\nimport consumer from \"../assets/house.svg\";\nimport both from \"../assets/solar-house.svg\";\nconst useStyles = makeStyles(() => ({\n  detailCard: {\n    marginLeft: '10px',\n    marginRight: '10px',\n    marginTop: '10px',\n    marginBottom: '10px',\n    display: \"inline-block\"\n  },\n  cardContent: {\n    display: \"flex\"\n  },\n  cardContentRow: {\n    display: \"block\",\n    margin: \"5px\"\n  }\n}));\n\nfunction DetailCard({\n  ol_uid\n}) {\n  const building = useSelector(state => state.buildings[ol_uid]);\n\n  function getHourSliders() {\n    let sliders = [];\n\n    for (let i = 0; i <= 24; i++) {\n      sliders.push( /*#__PURE__*/React.createElement(React.Fragment, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 26\n        }\n      }, \" \", /*#__PURE__*/React.createElement(VerticalSlider, {\n        hour: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 51\n        }\n      }), \" \"));\n    }\n\n    return sliders;\n  }\n\n  const renderBuildingAvatar = building_type => {\n    switch (building_type) {\n      case \"Consumer\":\n        return /*#__PURE__*/React.createElement(Avatar, {\n          variant: \"square\",\n          className: classes.sizeBuilding,\n          src: consumer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 24\n          }\n        });\n\n      case \"Consumer & Producer\":\n        return /*#__PURE__*/React.createElement(Avatar, {\n          variant: \"square\",\n          className: classes.sizeBuilding,\n          src: both,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 24\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(Avatar, {\n          variant: \"square\",\n          className: classes.sizeBuilding,\n          src: consumer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 24\n          }\n        });\n    }\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Card, {\n    variant: \"outlined\",\n    className: classes.detailCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.cardContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    variant: \"outlined\",\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    avatar: renderBuildingAvatar(building.type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \" \", building.type, \" \")), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.cardContentRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.sizeAvatar,\n    variant: \"square\",\n    src: locationImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, \" Lat \", building.latitude.toFixed(4), \", Lon \", building.longitude.toFixed(4), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.cardContentRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.sizeAvatar,\n    variant: \"square\",\n    src: areaImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, \" \", building.area, \" m\\xB2 \")))), /*#__PURE__*/React.createElement(CardContent, {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, getHourSliders())));\n}\n\nexport default DetailCard;","map":{"version":3,"sources":["/home/enrique/projects/prueba/src/DetailMenu/DetailCard.js"],"names":["React","useContext","useMemo","Box","CardContent","Typography","makeStyles","VerticalSlider","Card","useSelector","CardHeader","Avatar","CardActionArea","useStyles","detailCard","marginLeft","marginRight","marginTop","marginBottom","display","cardContent","cardContentRow","margin","DetailCard","ol_uid","building","state","buildings","getHourSliders","sliders","i","push","renderBuildingAvatar","building_type","classes","sizeBuilding","consumer","both","card","header","type","sizeAvatar","locationImg","latitude","toFixed","longitude","areaImg","area"],"mappings":"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","sourcesContent":["import React, { useContext, useMemo } from \"react\";\nimport { Box, CardContent, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport VerticalSlider from \"./VerticalSlider\";\nimport { Card } from '@material-ui/core';\nimport { useSelector } from 'react-redux'\nimport { CardHeader } from '@material-ui/core';\nimport { Avatar, CardActionArea } from '@material-ui/core';\nimport locationImg from \"../assets/location.svg\"\nimport areaImg from \"../assets/area.svg\"\nimport consumer from \"../assets/house.svg\"\nimport both from \"../assets/solar-house.svg\"\n\n\n\n\n\n\nconst useStyles = makeStyles(() => ({\n    detailCard: {\n        marginLeft: '10px',\n        marginRight: '10px',\n        marginTop: '10px',\n        marginBottom: '10px',\n        display: \"inline-block\"\n\n    },\n    cardContent: {\n        display: \"flex\"\n    },\n    cardContentRow: {\n        display: \"block\",\n        margin: \"5px\"\n    }\n\n}));\n\nfunction DetailCard({ ol_uid }) {\n\n    const building = useSelector(state => state.buildings[ol_uid]);\n\n\n    function getHourSliders() {\n        let sliders = [];\n        for (let i = 0; i <= 24; i++) {\n\n            sliders.push(<React.Fragment key={i}> <VerticalSlider hour={i} /> </React.Fragment >)\n        }\n        return sliders\n\n    }\n\n\n    const renderBuildingAvatar = (building_type) => {\n        switch (building_type) {\n            case \"Consumer\":\n                return <Avatar variant=\"square\" className={classes.sizeBuilding} src={consumer} />\n            case \"Consumer & Producer\":\n                return <Avatar variant=\"square\" className={classes.sizeBuilding} src={both} />\n            default:\n                return <Avatar variant=\"square\" className={classes.sizeBuilding} src={consumer} />\n        }\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Card variant=\"outlined\" className={classes.detailCard}>\n            <div className={classes.cardContent}>\n                <Card variant=\"outlined\" className={classes.card}>\n                    <div className={classes.header}>\n                        <CardHeader avatar={renderBuildingAvatar(building.type)}> </CardHeader>\n                        <Typography> {building.type} </Typography>\n                    </div>\n\n                    <CardContent>\n                        <div className={classes.cardContentRow}>\n                            <Avatar className={classes.sizeAvatar} variant=\"square\" src={locationImg} />\n                            <Typography> Lat {building.latitude.toFixed(4)}, Lon {building.longitude.toFixed(4)} </Typography>\n                        </div>\n                        <div className={classes.cardContentRow}>\n                            <Avatar className={classes.sizeAvatar} variant=\"square\" src={areaImg} />\n                            <Typography> {building.area} m² </Typography>\n                        </div>\n                    </CardContent>\n                </Card >\n                <CardContent style={{ display: \"flex\" }}>\n                    {getHourSliders()\n                    }\n                </CardContent>\n            </div>\n\n\n        </Card >);\n}\n\nexport default DetailCard"]},"metadata":{},"sourceType":"module"}