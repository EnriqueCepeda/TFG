{"ast":null,"code":"var _jsxFileName = \"/home/enrique/projects/prueba/src/Header.js\";\nimport { AppBar, Toolbar, Typography, makeStyles, Button, IconButton, Drawer, Link, MenuItem } from \"@material-ui/core\";\nimport 'fontsource-roboto';\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nconst headersData = [{\n  label: \"GRID DESIGNER\",\n  href: \"/\"\n}, {\n  label: \"GRID DETAIL\",\n  href: \"/detail\"\n}];\nconst useStyles = makeStyles(() => ({\n  header: {\n    backgroundColor: \"#5f468a\",\n    paddingLeft: \"20px\",\n    \"@media (max-width: 900px)\": {\n      paddingLeft: 0\n    }\n  },\n  logo: {\n    color: \"#FFFEFE\",\n    textAlign: \"left\"\n  },\n  menuButton: {\n    fontFamily: \"Open Sans, sans-serif\",\n    size: \"18px\",\n    marginLeft: \"38px\"\n  },\n  toolbar: {\n    display: \"flex\"\n  },\n  drawerContainer: {\n    padding: \"20px 30px\"\n  }\n}));\nexport default function Header({\n  title\n}) {\n  const {\n    header,\n    logo,\n    menuButton,\n    toolbar,\n    drawerContainer\n  } = useStyles();\n  const [state, setState] = useState({\n    mobileView: false,\n    drawerOpen: false\n  });\n  const {\n    mobileView,\n    drawerOpen\n  } = state;\n  useEffect(() => {\n    const setResponsiveness = () => {\n      return window.innerWidth < 900 ? setState(prevState => ({ ...prevState,\n        mobileView: true\n      })) : setState(prevState => ({ ...prevState,\n        mobileView: false\n      }));\n    };\n\n    setResponsiveness();\n    window.addEventListener(\"resize\", () => setResponsiveness());\n  }, []);\n\n  const displayDesktop = () => {\n    return /*#__PURE__*/React.createElement(Toolbar, {\n      className: toolbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, pageLogo, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, getMenuButtons()));\n  };\n\n  const displayMobile = () => {\n    const handleDrawerOpen = () => setState(prevState => ({ ...prevState,\n      drawerOpen: true\n    }));\n\n    const handleDrawerClose = () => setState(prevState => ({ ...prevState,\n      drawerOpen: false\n    }));\n\n    return /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, Object.assign({\n      edge: \"start\",\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      \"aria-haspopup\": \"true\",\n      onClick: handleDrawerOpen\n    }, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(MenuIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Drawer, Object.assign({\n      anchor: \"left\",\n      open: drawerOpen,\n      onClose: handleDrawerClose\n    }, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: drawerContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, getDrawerChoices())), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, pageLogo));\n  };\n\n  const getDrawerChoices = () => {\n    return headersData.map(({\n      label,\n      href\n    }) => {\n      return /*#__PURE__*/React.createElement(Link, Object.assign({\n        component: RouterLink,\n        to: href,\n        color: \"inherit\",\n        style: {\n          textDecoration: \"none\"\n        },\n        key: label\n      }, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(MenuItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }, label));\n    });\n  };\n\n  const pageLogo = /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h1\",\n    className: logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, title);\n\n  const getMenuButtons = () => {\n    return headersData.map(({\n      label,\n      href\n    }) => {\n      return /*#__PURE__*/React.createElement(Button, Object.assign({\n        key: label,\n        color: \"inherit\",\n        to: href,\n        component: RouterLink,\n        className: menuButton\n      }, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }), label);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    className: header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, mobileView ? displayMobile() : displayDesktop()), /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/enrique/projects/prueba/src/Header.js"],"names":["AppBar","Toolbar","Typography","makeStyles","Button","IconButton","Drawer","Link","MenuItem","MenuIcon","React","useState","useEffect","RouterLink","headersData","label","href","useStyles","header","backgroundColor","paddingLeft","logo","color","textAlign","menuButton","fontFamily","size","marginLeft","toolbar","display","drawerContainer","padding","Header","title","state","setState","mobileView","drawerOpen","setResponsiveness","window","innerWidth","prevState","addEventListener","displayDesktop","pageLogo","getMenuButtons","displayMobile","handleDrawerOpen","handleDrawerClose","edge","onClick","anchor","open","onClose","getDrawerChoices","map","component","to","style","textDecoration","key","className"],"mappings":"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","sourcesContent":["import {\n    AppBar,\n    Toolbar,\n    Typography,\n    makeStyles,\n    Button,\n    IconButton,\n    Drawer,\n    Link,\n    MenuItem,\n} from \"@material-ui/core\";\nimport 'fontsource-roboto';\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst headersData = [\n    {\n        label: \"GRID DESIGNER\",\n        href: \"/\",\n    },\n    {\n        label: \"GRID DETAIL\",\n        href: \"/detail\",\n    },\n];\n\nconst useStyles = makeStyles(() => ({\n    header: {\n        backgroundColor: \"#5f468a\",\n        paddingLeft: \"20px\",\n        \"@media (max-width: 900px)\": {\n            paddingLeft: 0,\n        },\n    },\n    logo: {\n        color: \"#FFFEFE\",\n        textAlign: \"left\",\n    },\n    menuButton: {\n        fontFamily: \"Open Sans, sans-serif\",\n        size: \"18px\",\n        marginLeft: \"38px\",\n    },\n    toolbar: {\n        display: \"flex\",\n    },\n    drawerContainer: {\n        padding: \"20px 30px\",\n    },\n}));\n\nexport default function Header({ title }) {\n    const { header, logo, menuButton, toolbar, drawerContainer } = useStyles();\n\n    const [state, setState] = useState({\n        mobileView: false,\n        drawerOpen: false,\n    });\n\n    const { mobileView, drawerOpen } = state;\n\n    useEffect(() => {\n        const setResponsiveness = () => {\n            return window.innerWidth < 900\n                ? setState((prevState) => ({ ...prevState, mobileView: true }))\n                : setState((prevState) => ({ ...prevState, mobileView: false }));\n        };\n\n        setResponsiveness();\n\n        window.addEventListener(\"resize\", () => setResponsiveness());\n    }, []);\n\n    const displayDesktop = () => {\n        return (\n            <Toolbar className={toolbar}>\n                {pageLogo}\n                <div>{getMenuButtons()}</div>\n            </Toolbar>\n        );\n    };\n\n    const displayMobile = () => {\n        const handleDrawerOpen = () =>\n            setState((prevState) => ({ ...prevState, drawerOpen: true }));\n        const handleDrawerClose = () =>\n            setState((prevState) => ({ ...prevState, drawerOpen: false }));\n\n        return (\n            <Toolbar>\n                <IconButton\n                    {...{\n                        edge: \"start\",\n                        color: \"inherit\",\n                        \"aria-label\": \"menu\",\n                        \"aria-haspopup\": \"true\",\n                        onClick: handleDrawerOpen,\n                    }}\n                >\n                    <MenuIcon />\n                </IconButton>\n\n                <Drawer\n                    {...{\n                        anchor: \"left\",\n                        open: drawerOpen,\n                        onClose: handleDrawerClose,\n                    }}\n                >\n                    <div className={drawerContainer}>{getDrawerChoices()}</div>\n                </Drawer>\n\n                <div>{pageLogo}</div>\n            </Toolbar>\n        );\n    };\n\n    const getDrawerChoices = () => {\n        return headersData.map(({ label, href }) => {\n            return (\n                <Link\n                    {...{\n                        component: RouterLink,\n                        to: href,\n                        color: \"inherit\",\n                        style: { textDecoration: \"none\" },\n                        key: label,\n                    }}\n                >\n                    <MenuItem>{label}</MenuItem>\n                </Link>\n            );\n        });\n    };\n\n    const pageLogo = (\n        <Typography variant=\"h6\" component=\"h1\" className={logo}>\n            {title}\n        </Typography>\n    );\n\n    const getMenuButtons = () => {\n        return headersData.map(({ label, href }) => {\n            return (\n                <Button\n                    {...{\n                        key: label,\n                        color: \"inherit\",\n                        to: href,\n                        component: RouterLink,\n                        className: menuButton,\n                    }}\n                >\n                    {label}\n                </Button>\n            );\n        });\n    };\n\n    return (\n        <header>\n            <AppBar className={header}>\n                {mobileView ? displayMobile() : displayDesktop()}\n            </AppBar>\n            <Toolbar />\n        </header>\n    );\n}"]},"metadata":{},"sourceType":"module"}