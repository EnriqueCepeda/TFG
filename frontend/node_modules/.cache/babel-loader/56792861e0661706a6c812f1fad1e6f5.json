{"ast":null,"code":"var _jsxFileName = \"/home/enrique/projects/prueba/src/Map/Map.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport MapContext from \"./MapContext\";\nimport * as ol from \"ol\";\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles({\n  \"map\": {\n    \"min-width\": \"600px\",\n    \"min-height\": \"500px\",\n    \"margin-left\": \"10px\",\n    \"margin-right\": \"5px\",\n    \"height\": \"100%\",\n    \"width\": \"70%\",\n    \"flex\": 6\n  }\n});\n\nconst Map = ({\n  children,\n  zoom,\n  center\n}) => {\n  const mapRef = useRef();\n  const [map, setMap] = useState(null);\n  const styles = useStyles(); // on component mount\n\n  useEffect(() => {\n    let options = {\n      view: new ol.View({\n        zoom,\n        center\n      }),\n      layers: [],\n      controls: [],\n      overlays: []\n    };\n    let mapObject = new ol.Map(options);\n    mapObject.setTarget(mapRef.current);\n    setMap(mapObject);\n    return () => mapObject.setTarget(undefined);\n  }, []); // zoom change handler\n\n  useEffect(() => {\n    if (!map) return;\n    map.getView().setZoom(zoom);\n  }, [zoom]); // center change handler\n\n  useEffect(() => {\n    if (!map) return;\n    map.getView().setCenter(center);\n  }, [center]);\n  return /*#__PURE__*/React.createElement(MapContext.Provider, {\n    value: {\n      map\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapRef,\n    className: \"ol-map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }, children));\n};\n\nexport default Map;","map":{"version":3,"sources":["/home/enrique/projects/prueba/src/Map/Map.js"],"names":["React","useRef","useState","useEffect","MapContext","ol","makeStyles","useStyles","Map","children","zoom","center","mapRef","map","setMap","styles","options","view","View","layers","controls","overlays","mapObject","setTarget","current","undefined","getView","setZoom","setCenter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC;AAC5B,SAAO;AACN,iBAAa,OADP;AAEN,kBAAc,OAFR;AAGN,mBAAe,MAHT;AAIN,oBAAgB,KAJV;AAKN,cAAU,MALJ;AAMN,aAAS,KANH;AAON,YAAQ;AAPF;AADqB,CAAD,CAA5B;;AAYA,MAAME,GAAG,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA;AAAlB,CAAD,KAAgC;AAC3C,QAAMC,MAAM,GAAGX,MAAM,EAArB;AACA,QAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAMa,MAAM,GAAGR,SAAS,EAAxB,CAH2C,CAK3C;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIa,OAAO,GAAG;AACbC,MAAAA,IAAI,EAAE,IAAIZ,EAAE,CAACa,IAAP,CAAY;AAAER,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAZ,CADO;AAEbQ,MAAAA,MAAM,EAAE,EAFK;AAGbC,MAAAA,QAAQ,EAAE,EAHG;AAIbC,MAAAA,QAAQ,EAAE;AAJG,KAAd;AAOA,QAAIC,SAAS,GAAG,IAAIjB,EAAE,CAACG,GAAP,CAAWQ,OAAX,CAAhB;AACAM,IAAAA,SAAS,CAACC,SAAV,CAAoBX,MAAM,CAACY,OAA3B;AACAV,IAAAA,MAAM,CAACQ,SAAD,CAAN;AAEA,WAAO,MAAMA,SAAS,CAACC,SAAV,CAAoBE,SAApB,CAAb;AACA,GAbQ,EAaN,EAbM,CAAT,CAN2C,CAqB3C;;AACAtB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI,CAACU,GAAL,EAAU;AAEVA,IAAAA,GAAG,CAACa,OAAJ,GAAcC,OAAd,CAAsBjB,IAAtB;AACA,GAJQ,EAIN,CAACA,IAAD,CAJM,CAAT,CAtB2C,CA4B3C;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI,CAACU,GAAL,EAAU;AAEVA,IAAAA,GAAG,CAACa,OAAJ,GAAcE,SAAd,CAAwBjB,MAAxB;AACA,GAJQ,EAIN,CAACA,MAAD,CAJM,CAAT;AAMA,sBACC,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAEE,MAAAA;AAAF,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,GAAG,EAAED,MAAV;AAAkB,IAAA,SAAS,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,QADF,CADD,CADD;AAOA,CA1CD;;AA4CA,eAAeD,GAAf","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\"\nimport MapContext from \"./MapContext\";\nimport * as ol from \"ol\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n\t\"map\": {\n\t\t\"min-width\": \"600px\",\n\t\t\"min-height\": \"500px\",\n\t\t\"margin-left\": \"10px\",\n\t\t\"margin-right\": \"5px\",\n\t\t\"height\": \"100%\",\n\t\t\"width\": \"70%\",\n\t\t\"flex\": 6,\n\t}\n});\n\nconst Map = ({ children, zoom, center }) => {\n\tconst mapRef = useRef();\n\tconst [map, setMap] = useState(null);\n\tconst styles = useStyles();\n\n\t// on component mount\n\tuseEffect(() => {\n\t\tlet options = {\n\t\t\tview: new ol.View({ zoom, center }),\n\t\t\tlayers: [],\n\t\t\tcontrols: [],\n\t\t\toverlays: []\n\t\t};\n\n\t\tlet mapObject = new ol.Map(options);\n\t\tmapObject.setTarget(mapRef.current);\n\t\tsetMap(mapObject);\n\n\t\treturn () => mapObject.setTarget(undefined);\n\t}, []);\n\n\t// zoom change handler\n\tuseEffect(() => {\n\t\tif (!map) return;\n\n\t\tmap.getView().setZoom(zoom);\n\t}, [zoom]);\n\n\t// center change handler\n\tuseEffect(() => {\n\t\tif (!map) return;\n\n\t\tmap.getView().setCenter(center)\n\t}, [center])\n\n\treturn (\n\t\t<MapContext.Provider value={{ map }}>\n\t\t\t<div ref={mapRef} className=\"ol-map\">\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</MapContext.Provider>\n\t)\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}