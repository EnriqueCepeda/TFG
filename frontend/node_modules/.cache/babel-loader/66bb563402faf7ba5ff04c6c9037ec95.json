{"ast":null,"code":"var _jsxFileName = \"/home/enrique/projects/prueba/src/GridDesigner.js\";\nimport 'fontsource-roboto';\nimport \"ol/ol.css\";\nimport React, { useState } from 'react';\nimport Map from \"./Map\";\nimport { Layers, TileLayer, VectorLayer } from \"./Layers\";\nimport { osm } from \"./Source\";\nimport { Controls, FullScreenControl, ZoomControl } from \"./Controls\";\nimport { Box } from \"@material-ui/core\";\nimport { BuildingContainer } from './BuildingMenu';\nimport { AppBar } from '@material-ui/core';\nimport { fromLonLat } from 'ol/proj';\nimport { Fill, Stroke, Style } from 'ol/style';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core/';\nconst useStyles = makeStyles(() => ({\n  GridDesigner: {\n    height: '98%',\n    width: '100%'\n  },\n  Content: {\n    height: '98%',\n    width: '100%',\n    marginLeft: '1vw',\n    marginTop: '1vh',\n    display: 'flex'\n  }\n}));\nlet styles = {\n  'Default': new Style({\n    zIndex: 100,\n    stroke: new Stroke({\n      color: 'rgba(246, 207, 101, 1.0)',\n      width: 1\n    }),\n    fill: new Fill({\n      color: 'rgba(255, 242, 175, 0.5)'\n    })\n  }),\n  'BuildingHighlight': new Style({\n    fill: new Fill({\n      color: 'rgba(255,255,255,0.7)'\n    }),\n    stroke: new Stroke({\n      color: '#3399CC',\n      width: 3\n    })\n  })\n};\n\nconst GridDesigner = () => {\n  const [center, setCenter] = useState([-3.92907, 38.98626]);\n  const [zoom, setZoom] = useState(18);\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Box, {\n    className: classes.GridDesigner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"inherit\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Grid designer\")), /*#__PURE__*/React.createElement(Box, {\n    className: classes.Content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    center: fromLonLat(center),\n    zoom: zoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Layers, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    source: osm(),\n    zIndex: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(VectorLayer, {\n    defaultStyle: styles.Default,\n    highlightStyle: styles.BuildingHighlight,\n    renderZoom: 17,\n    centerSetter: setCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Controls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FullScreenControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(ZoomControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(BuildingContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default GridDesigner;","map":{"version":3,"sources":["/home/enrique/projects/prueba/src/GridDesigner.js"],"names":["React","useState","Map","Layers","TileLayer","VectorLayer","osm","Controls","FullScreenControl","ZoomControl","Box","BuildingContainer","AppBar","fromLonLat","Fill","Stroke","Style","makeStyles","Typography","useStyles","GridDesigner","height","width","Content","marginLeft","marginTop","display","styles","zIndex","stroke","color","fill","center","setCenter","zoom","setZoom","classes","Default","BuildingHighlight"],"mappings":"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","sourcesContent":["import 'fontsource-roboto';\nimport \"ol/ol.css\"\n\nimport React, { useState } from 'react';\nimport Map from \"./Map\";\nimport { Layers, TileLayer, VectorLayer } from \"./Layers\";\nimport { osm } from \"./Source\";\nimport { Controls, FullScreenControl, ZoomControl } from \"./Controls\";\nimport { Box } from \"@material-ui/core\"\nimport { BuildingContainer, } from './BuildingMenu';\nimport { AppBar } from '@material-ui/core';\nimport { fromLonLat } from 'ol/proj';\nimport { Fill, Stroke, Style } from 'ol/style';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core/';\n\n\nconst useStyles = makeStyles(() => ({\n    GridDesigner: {\n        height: '98%',\n        width: '100%',\n    },\n    Content: {\n        height: '98%',\n        width: '100%',\n        marginLeft: '1vw',\n        marginTop: '1vh',\n        display: 'flex',\n    }\n}));\n\n\nlet styles = {\n    'Default': new Style({\n        zIndex: 100,\n        stroke: new Stroke({\n            color: 'rgba(246, 207, 101, 1.0)',\n            width: 1,\n        }),\n        fill: new Fill({\n            color: 'rgba(255, 242, 175, 0.5)',\n        }),\n    }),\n    'BuildingHighlight': new Style({\n        fill: new Fill({\n            color: 'rgba(255,255,255,0.7)',\n        }),\n        stroke: new Stroke({\n            color: '#3399CC',\n            width: 3,\n        }),\n    }),\n};\n\n\nconst GridDesigner = () => {\n\n    const [center, setCenter] = useState([-3.92907, 38.98626]);\n    const [zoom, setZoom] = useState(18);\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.GridDesigner}>\n            <AppBar position=\"static\" >\n                <Typography variant=\"h5\" color=\"inherit\" align=\"center\">\n                    Grid designer\n                </Typography>\n            </AppBar>\n            <Box className={classes.Content}>\n\n                <Map center={fromLonLat(center)} zoom={zoom}>\n                    <Layers>\n                        <TileLayer\n                            source={osm()}\n                            zIndex={0}\n                        />\n                        <VectorLayer\n                            defaultStyle={styles.Default} highlightStyle={styles.BuildingHighlight} renderZoom={17} centerSetter={setCenter}\n                        />\n                    </Layers>\n                    <Controls>\n                        <FullScreenControl />\n                        <ZoomControl />\n                    </Controls>\n                </Map>\n                <BuildingContainer />\n            </Box>\n        </Box>\n    )\n};\n\nexport default GridDesigner;\n"]},"metadata":{},"sourceType":"module"}