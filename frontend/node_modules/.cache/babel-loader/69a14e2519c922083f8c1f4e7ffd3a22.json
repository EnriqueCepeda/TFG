{"ast":null,"code":"var _jsxFileName = \"/home/enrique/projects/TFG/src/DetailMenu/DetailCard.js\";\nimport React, { useContext, useMemo } from \"react\";\nimport { Box, Button, CardContent, Typography } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport VerticalSlider from \"./VerticalSlider\";\nimport { Card } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CardHeader } from '@material-ui/core';\nimport { Avatar, CardActionArea } from '@material-ui/core';\nimport locationImg from \"../assets/location.svg\";\nimport areaImg from \"../assets/area.svg\";\nimport consumer from \"../assets/house.svg\";\nimport both from \"../assets/solar-house.svg\";\nimport { green, purple } from '@material-ui/core/colors';\nimport { getBuilding, getBuildingConsumption } from \"../redux/selectors\";\nconst useStyles = makeStyles(() => ({\n  sizeBuilding: {\n    height: 50,\n    width: 50,\n    flexGrow: 1,\n    alignSelf: \"center\",\n    textAlign: \"center\",\n    align: \"center\"\n  },\n  sizeAvatar: {\n    height: 30,\n    width: 30,\n    marginRight: 5\n  },\n  detailCard: {\n    marginLeft: '10px',\n    marginRight: '10px',\n    marginTop: '10px',\n    marginBottom: '10px',\n    display: \"inline-block\"\n  },\n  cardHeader: {\n    display: \"flex\",\n    flexGrow: 1\n  },\n  cardContent: {\n    display: \"flex\"\n  },\n  cardContentRow: {\n    display: \"flex\",\n    margin: \"5px\",\n    marginBottom: \"15px\"\n  },\n  typographyStyle: {\n    flexGrow: 1\n  },\n  header: {\n    display: \"flex\"\n  }\n}));\n/*\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        justifyContent: 'center',\n        color: theme.palette.getContrastText(purple[500]),\n        backgroundColor: '#7658a9',\n        '&:hover': {\n            backgroundColor: '#5F468A',\n        },\n    },\n}))(Button);\n*/\n\nfunction DetailCard({\n  ol_uid\n}) {\n  const building = useSelector(state => getBuilding(state, ol_uid));\n  const buildingConsumption = useSelector(state => getBuildingConsumption(state, ol_uid));\n  const classes = useStyles();\n\n  function getHourSliders() {\n    let sliders = [];\n\n    for (let i = 0; i <= 24; i++) {\n      var marginTitle = 3;\n\n      if (i <= 9) {\n        marginTitle = 8;\n      }\n\n      sliders.push( /*#__PURE__*/React.createElement(React.Fragment, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 26\n        }\n      }, \" \", /*#__PURE__*/React.createElement(VerticalSlider, {\n        ol_uid: ol_uid,\n        hour: i,\n        marginTitle: marginTitle,\n        initialValue: buildingConsumption[i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 51\n        }\n      }), \" \"));\n    }\n\n    return sliders;\n  }\n\n  const renderBuildingAvatar = building_type => {\n    switch (building_type) {\n      case \"Consumer\":\n        return /*#__PURE__*/React.createElement(Avatar, {\n          variant: \"square\",\n          className: classes.sizeBuilding,\n          src: consumer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 24\n          }\n        });\n\n      case \"Consumer & Producer\":\n        return /*#__PURE__*/React.createElement(Avatar, {\n          variant: \"square\",\n          className: classes.sizeBuilding,\n          src: both,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 24\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(Avatar, {\n          variant: \"square\",\n          className: classes.sizeBuilding,\n          src: consumer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 24\n          }\n        });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    variant: \"outlined\",\n    className: classes.detailCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.cardContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: classes.cardHeader,\n    avatar: renderBuildingAvatar(building.type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.cardContentRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.sizeAvatar,\n    variant: \"square\",\n    src: locationImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, \" Lat \", building.latitude.toFixed(4), \", Lon \", building.longitude.toFixed(4), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.cardContentRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.sizeAvatar,\n    variant: \"square\",\n    src: areaImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, \" \", building.area, \" m\\xB2 \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.cardContentRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typographyStyle,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, \" \", building.type)))), /*#__PURE__*/React.createElement(CardContent, {\n    style: {\n      display: \"flex\",\n      height: \"25vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, getHourSliders())));\n}\n\nexport default DetailCard;","map":{"version":3,"sources":["/home/enrique/projects/TFG/src/DetailMenu/DetailCard.js"],"names":["React","useContext","useMemo","Box","Button","CardContent","Typography","makeStyles","withStyles","VerticalSlider","Card","useSelector","useDispatch","CardHeader","Avatar","CardActionArea","green","purple","getBuilding","getBuildingConsumption","useStyles","sizeBuilding","height","width","flexGrow","alignSelf","textAlign","align","sizeAvatar","marginRight","detailCard","marginLeft","marginTop","marginBottom","display","cardHeader","cardContent","cardContentRow","margin","typographyStyle","header","DetailCard","ol_uid","building","state","buildingConsumption","classes","getHourSliders","sliders","i","marginTitle","push","renderBuildingAvatar","building_type","consumer","both","type","locationImg","latitude","toFixed","longitude","areaImg","area"],"mappings":"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","sourcesContent":["import React, { useContext, useMemo } from \"react\";\nimport { Box, Button, CardContent, Typography } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport VerticalSlider from \"./VerticalSlider\";\nimport { Card } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { CardHeader } from '@material-ui/core';\nimport { Avatar, CardActionArea } from '@material-ui/core';\nimport locationImg from \"../assets/location.svg\"\nimport areaImg from \"../assets/area.svg\"\nimport consumer from \"../assets/house.svg\"\nimport both from \"../assets/solar-house.svg\"\nimport { green, purple } from '@material-ui/core/colors';\nimport { getBuilding, getBuildingConsumption } from \"../redux/selectors\"\n\n\n\nconst useStyles = makeStyles(() => ({\n    sizeBuilding: {\n        height: 50,\n        width: 50,\n        flexGrow: 1,\n        alignSelf: \"center\",\n        textAlign: \"center\",\n        align: \"center\"\n    },\n    sizeAvatar: {\n        height: 30,\n        width: 30,\n        marginRight: 5,\n    },\n    detailCard: {\n        marginLeft: '10px',\n        marginRight: '10px',\n        marginTop: '10px',\n        marginBottom: '10px',\n        display: \"inline-block\"\n\n    },\n    cardHeader: {\n        display: \"flex\",\n        flexGrow: 1\n    },\n    cardContent: {\n        display: \"flex\"\n    },\n    cardContentRow: {\n        display: \"flex\",\n        margin: \"5px\",\n        marginBottom: \"15px\"\n    },\n    typographyStyle: {\n        flexGrow: 1\n    },\n    header: {\n        display: \"flex\"\n    }\n\n}));\n\n/*\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        justifyContent: 'center',\n        color: theme.palette.getContrastText(purple[500]),\n        backgroundColor: '#7658a9',\n        '&:hover': {\n            backgroundColor: '#5F468A',\n        },\n    },\n}))(Button);\n*/\n\nfunction DetailCard({ ol_uid }) {\n\n    const building = useSelector(state => getBuilding(state, ol_uid));\n    const buildingConsumption = useSelector((state) => getBuildingConsumption(state, ol_uid));\n    const classes = useStyles();\n\n    function getHourSliders() {\n        let sliders = [];\n        for (let i = 0; i <= 24; i++) {\n            var marginTitle = 3;\n            if (i <= 9) {\n                marginTitle = 8;\n            }\n            sliders.push(<React.Fragment key={i}> <VerticalSlider ol_uid={ol_uid} hour={i} marginTitle={marginTitle} initialValue={buildingConsumption[i]} /> </React.Fragment >)\n        }\n        return sliders\n    }\n\n\n    const renderBuildingAvatar = (building_type) => {\n        switch (building_type) {\n            case \"Consumer\":\n                return <Avatar variant=\"square\" className={classes.sizeBuilding} src={consumer} />\n            case \"Consumer & Producer\":\n                return <Avatar variant=\"square\" className={classes.sizeBuilding} src={both} />\n            default:\n                return <Avatar variant=\"square\" className={classes.sizeBuilding} src={consumer} />\n        }\n    };\n\n    return (\n        <Card variant=\"outlined\" className={classes.detailCard}>\n            <div className={classes.cardContent}>\n                <Card>\n                    <CardHeader className={classes.cardHeader} avatar={renderBuildingAvatar(building.type)}> </CardHeader>\n\n                    <CardContent>\n                        <div className={classes.cardContentRow}>\n                            <Avatar className={classes.sizeAvatar} variant=\"square\" src={locationImg} />\n                            <Typography> Lat {building.latitude.toFixed(4)}, Lon {building.longitude.toFixed(4)} </Typography>\n                        </div>\n                        <div className={classes.cardContentRow}>\n                            <Avatar className={classes.sizeAvatar} variant=\"square\" src={areaImg} />\n                            <Typography> {building.area} m² </Typography>\n                        </div>\n                        <div className={classes.cardContentRow}>\n                            <Typography className={classes.typographyStyle} align=\"center\"> {building.type}</Typography>\n                        </div>\n                    </CardContent>\n                </Card >\n                <CardContent style={{ display: \"flex\", height: \"25vh\", }}>\n                    {getHourSliders()\n                    }\n                </CardContent>\n            </div>\n\n\n        </Card >);\n\n\n}\n\nexport default DetailCard"]},"metadata":{},"sourceType":"module"}