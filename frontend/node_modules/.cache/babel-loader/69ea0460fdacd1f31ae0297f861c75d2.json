{"ast":null,"code":"var _jsxFileName = \"/home/enrique/projects/prueba/src/BuildingMenu/BuildingCard.js\";\nimport React, { useContext } from \"react\";\nimport consumer from \"../assets/house.svg\";\nimport producer from \"../assets/panel-solar.svg\";\nimport both from \"../assets/solar-house.svg\";\nimport locationImg from \"../assets/location.svg\";\nimport areaImg from \"../assets/area.svg\";\nimport { Avatar } from '@material-ui/core';\nimport { Card } from '@material-ui/core';\nimport { CardContent } from '@material-ui/core';\nimport { CardHeader } from '@material-ui/core';\nimport { Typography } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ToggleButtonGroup } from '@material-ui/lab';\nimport { ToggleButton } from '@material-ui/lab';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateBuildingType } from '../redux/actions/buildingActions.js';\nconst useStyles = makeStyles(() => ({\n  sizeBuilding: {\n    height: 50,\n    width: 50\n  },\n  sizeAvatar: {\n    height: 30,\n    width: 30,\n    marginRight: 5\n  },\n  card: {\n    display: \"flex\",\n    marginLeft: '10px',\n    marginRight: '10px',\n    marginTop: '10px',\n    marginBottom: '10px'\n  }\n}));\n\nfunction BuildingCard({\n  ol_uid\n}) {\n  const classes = useStyles();\n  const building = useSelector(state => state.buildings[ol_uid]);\n  const dispatch = useDispatch();\n\n  const renderBuildingAvatar = building_type => {\n    switch (building_type) {\n      case \"Consumer\":\n        return /*#__PURE__*/React.createElement(Avatar, {\n          variant: \"square\",\n          className: classes.sizeBuilding,\n          src: consumer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 24\n          }\n        });\n\n      case \"Producer\":\n        return /*#__PURE__*/React.createElement(Avatar, {\n          variant: \"square\",\n          className: classes.sizeBuilding,\n          src: producer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 24\n          }\n        });\n\n      case \"Consumer & Producer\":\n        return /*#__PURE__*/React.createElement(Avatar, {\n          variant: \"square\",\n          className: classes.sizeBuilding,\n          src: both,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 24\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(Avatar, {\n          variant: \"square\",\n          className: classes.sizeBuilding,\n          src: consumer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 24\n          }\n        });\n    }\n  };\n\n  const handleBuildingType = (event, value) => {\n    if (value != null) {\n      dispatch(updateBuildingType(ol_uid, value));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    variant: \"outlined\",\n    className: classes.card,\n    style: {\n      display: \"flex\",\n      marginLeft: '10px',\n      marginRight: '10px',\n      marginTop: '10px',\n      marginBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: ol_uid,\n    avatar: renderBuildingAvatar(building.type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    exclusive: true,\n    value: building.type,\n    onChange: handleBuildingType,\n    \"aria-label\": \"building type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"Consumer\",\n    \"aria-label\": \"left aligned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"Producer\",\n    \"aria-label\": \"centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"Consumer & Producer\",\n    \"aria-label\": \"right aligned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      \"flexDirection\": \"column\",\n      flex: 3,\n      justifyContent: 'space-evenly'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      \"flexDirection\": \"row\",\n      margin: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.sizeAvatar,\n    variant: \"square\",\n    src: locationImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, \" Latitude: \", building.latitude.toFixed(4), \" Longitude: \", building.longitude.toFixed(4), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      \"flexDirection\": \"row\",\n      margin: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.sizeAvatar,\n    variant: \"square\",\n    src: areaImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \" \", building.area, \" m\\xB2 \")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      \"flexDirection\": \"row\",\n      margin: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, \" \", building.type, \" \")))));\n}\n\nexport default BuildingCard;","map":{"version":3,"sources":["/home/enrique/projects/prueba/src/BuildingMenu/BuildingCard.js"],"names":["React","useContext","Avatar","Card","CardContent","CardHeader","Typography","makeStyles","ToggleButtonGroup","ToggleButton","useSelector","useDispatch","updateBuildingType","useStyles","sizeBuilding","height","width","sizeAvatar","marginRight","card","display","marginLeft","marginTop","marginBottom","BuildingCard","ol_uid","classes","building","state","buildings","dispatch","renderBuildingAvatar","building_type","consumer","producer","both","handleBuildingType","event","value","flex","type","justifyContent","margin","locationImg","latitude","toFixed","longitude","areaImg","area"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;;;AAMA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,qCAAnC;AAIA,MAAMC,SAAS,GAAGN,UAAU,CAAC,OAAO;AAChCO,EAAAA,YAAY,EAAE;AACVC,IAAAA,MAAM,EAAE,EADE;AAEVC,IAAAA,KAAK,EAAE;AAFG,GADkB;AAKhCC,EAAAA,UAAU,EAAE;AACRF,IAAAA,MAAM,EAAE,EADA;AAERC,IAAAA,KAAK,EAAE,EAFC;AAGRE,IAAAA,WAAW,EAAE;AAHL,GALoB;AAUhCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,UAAU,EAAE,MAFV;AAGFH,IAAAA,WAAW,EAAE,MAHX;AAIFI,IAAAA,SAAS,EAAE,MAJT;AAKFC,IAAAA,YAAY,EAAE;AALZ;AAV0B,CAAP,CAAD,CAA5B;;AAmBA,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAkC;AAG9B,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,QAAMc,QAAQ,GAAGjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,CAAV,CAA5B;AACA,QAAMK,QAAQ,GAAGnB,WAAW,EAA5B;;AAEA,QAAMoB,oBAAoB,GAAIC,aAAD,IAAmB;AAC5C,YAAQA,aAAR;AACI,WAAK,UAAL;AACI,4BAAO,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,QAAhB;AAAyB,UAAA,SAAS,EAAEN,OAAO,CAACZ,YAA5C;AAA0D,UAAA,GAAG,EAAEmB,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,UAAL;AACI,4BAAO,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,QAAhB;AAAyB,UAAA,SAAS,EAAEP,OAAO,CAACZ,YAA5C;AAA0D,UAAA,GAAG,EAAEoB,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,qBAAL;AACI,4BAAO,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,QAAhB;AAAyB,UAAA,SAAS,EAAER,OAAO,CAACZ,YAA5C;AAA0D,UAAA,GAAG,EAAEqB,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ;AACI,4BAAO,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,QAAhB;AAAyB,UAAA,SAAS,EAAET,OAAO,CAACZ,YAA5C;AAA0D,UAAA,GAAG,EAAEmB,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AARR;AAUH,GAXD;;AAaA,QAAMG,kBAAkB,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACzC,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACfR,MAAAA,QAAQ,CAAClB,kBAAkB,CAACa,MAAD,EAASa,KAAT,CAAnB,CAAR;AACH;AACJ,GAJD;;AAMA,sBACI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,UAAd;AAAyB,IAAA,SAAS,EAAEZ,OAAO,CAACP,IAA5C;AAAkD,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE,MAA/B;AAAuCH,MAAAA,WAAW,EAAE,MAApD;AAA4DI,MAAAA,SAAS,EAAE,MAAvE;AAA+EC,MAAAA,YAAY,EAAE;AAA7F,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAE;AAAEgB,MAAAA,IAAI,EAAE;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEd,MAAnB;AAA2B,IAAA,MAAM,EAAEM,oBAAoB,CAACJ,QAAQ,CAACa,IAAV,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,eAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,iBAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,KAAK,EAAEb,QAAQ,CAACa,IAFpB;AAGI,IAAA,QAAQ,EAAEJ,kBAHd;AAII,kBAAW,eAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,UAApB;AAA+B,kBAAW,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAOI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,UAApB;AAA+B,kBAAW,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAQI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,qBAApB;AAA0C,kBAAW,eAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ,CAFJ,CADJ,eAmBI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAE;AAAEhB,MAAAA,OAAO,EAAE,MAAX;AAAmB,uBAAiB,QAApC;AAA8CmB,MAAAA,IAAI,EAAE,CAApD;AAAuDE,MAAAA,cAAc,EAAE;AAAvE,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAE;AAAErB,MAAAA,OAAO,EAAE,MAAX;AAAmB,uBAAiB,KAApC;AAA2CsB,MAAAA,MAAM,EAAE;AAAnD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEhB,OAAO,CAACT,UAA3B;AAAuC,IAAA,OAAO,EAAC,QAA/C;AAAwD,IAAA,GAAG,EAAE0B,WAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwBhB,QAAQ,CAACiB,QAAT,CAAkBC,OAAlB,CAA0B,CAA1B,CAAxB,kBAAkElB,QAAQ,CAACmB,SAAT,CAAmBD,OAAnB,CAA2B,CAA3B,CAAlE,MAFJ,CADJ,eAKI;AAAK,IAAA,KAAK,EAAE;AAAEzB,MAAAA,OAAO,EAAE,MAAX;AAAmB,uBAAiB,KAApC;AAA2CsB,MAAAA,MAAM,EAAE;AAAnD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEhB,OAAO,CAACT,UAA3B;AAAuC,IAAA,OAAO,EAAC,QAA/C;AAAwD,IAAA,GAAG,EAAE8B,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAcpB,QAAQ,CAACqB,IAAvB,YAFJ,CALJ,eASI;AAAK,IAAA,KAAK,EAAE;AAAE5B,MAAAA,OAAO,EAAE,MAAX;AAAmB,uBAAiB,KAApC;AAA2CsB,MAAAA,MAAM,EAAE;AAAnD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAcf,QAAQ,CAACa,IAAvB,MADJ,CATJ,CADJ,CAnBJ,CADJ;AAsCH;;AAED,eAAehB,YAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport consumer from \"../assets/house.svg\"\nimport producer from \"../assets/panel-solar.svg\"\nimport both from \"../assets/solar-house.svg\"\nimport locationImg from \"../assets/location.svg\"\nimport areaImg from \"../assets/area.svg\"\nimport { Avatar } from '@material-ui/core';\nimport { Card } from '@material-ui/core';\nimport { CardContent } from '@material-ui/core';\nimport { CardHeader } from '@material-ui/core';\nimport { Typography } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ToggleButtonGroup } from '@material-ui/lab';\nimport { ToggleButton } from '@material-ui/lab';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { updateBuildingType } from '../redux/actions/buildingActions.js'\n\n\n\nconst useStyles = makeStyles(() => ({\n    sizeBuilding: {\n        height: 50,\n        width: 50,\n    },\n    sizeAvatar: {\n        height: 30,\n        width: 30,\n        marginRight: 5,\n    },\n    card: {\n        display: \"flex\",\n        marginLeft: '10px',\n        marginRight: '10px',\n        marginTop: '10px',\n        marginBottom: '10px'\n    }\n}));\n\nfunction BuildingCard({ ol_uid }) {\n\n\n    const classes = useStyles();\n    const building = useSelector(state => state.buildings[ol_uid]);\n    const dispatch = useDispatch();\n\n    const renderBuildingAvatar = (building_type) => {\n        switch (building_type) {\n            case \"Consumer\":\n                return <Avatar variant=\"square\" className={classes.sizeBuilding} src={consumer} />\n            case \"Producer\":\n                return <Avatar variant=\"square\" className={classes.sizeBuilding} src={producer} />\n            case \"Consumer & Producer\":\n                return <Avatar variant=\"square\" className={classes.sizeBuilding} src={both} />\n            default:\n                return <Avatar variant=\"square\" className={classes.sizeBuilding} src={consumer} />\n        }\n    };\n\n    const handleBuildingType = (event, value) => {\n        if (value != null) {\n            dispatch(updateBuildingType(ol_uid, value));\n        }\n    };\n\n    return (\n        <Card variant=\"outlined\" className={classes.card} style={{ display: \"flex\", marginLeft: '10px', marginRight: '10px', marginTop: '10px', marginBottom: '10px' }}>\n            <div style={{ flex: 1 }}>\n                <CardHeader title={ol_uid} avatar={renderBuildingAvatar(building.type)}> </CardHeader>\n                <CardContent>\n                    <ToggleButtonGroup\n                        exclusive\n                        value={building.type}\n                        onChange={handleBuildingType}\n                        aria-label=\"building type\"\n                    >\n                        <ToggleButton value=\"Consumer\" aria-label=\"left aligned\" />\n                        <ToggleButton value=\"Producer\" aria-label=\"centered\" />\n                        <ToggleButton value=\"Consumer & Producer\" aria-label=\"right aligned\" />\n                    </ToggleButtonGroup>\n                </CardContent >\n            </div >\n\n\n\n            <CardContent>\n                <div style={{ display: \"flex\", \"flexDirection\": \"column\", flex: 3, justifyContent: 'space-evenly' }}>\n                    <div style={{ display: \"flex\", \"flexDirection\": \"row\", margin: \"5px\" }}>\n                        <Avatar className={classes.sizeAvatar} variant=\"square\" src={locationImg} />\n                        <Typography> Latitude: {building.latitude.toFixed(4)} Longitude: {building.longitude.toFixed(4)} </Typography>\n                    </div>\n                    <div style={{ display: \"flex\", \"flexDirection\": \"row\", margin: \"5px\" }}>\n                        <Avatar className={classes.sizeAvatar} variant=\"square\" src={areaImg} />\n                        <Typography> {building.area} m² </Typography>\n                    </div>\n                    <div style={{ display: \"flex\", \"flexDirection\": \"row\", margin: \"5px\" }}>\n                        <Typography> {building.type} </Typography>\n                    </div>\n\n                </div>\n            </CardContent>\n\n        </Card >);\n}\n\nexport default BuildingCard"]},"metadata":{},"sourceType":"module"}