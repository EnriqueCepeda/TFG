{"ast":null,"code":"var _jsxFileName = \"/home/enrique/projects/prueba/src/DetailMenu/VerticalSlider.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Input from '@material-ui/core/Input';\nimport Slider from '@material-ui/core/Slider';\nimport Box from '@material-ui/core/Box';\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: 400\n  },\n  slider: {\n    height: 10,\n    marginBottom: '20px'\n  },\n  margin: {\n    height: theme.spacing(3)\n  },\n  input: {\n    width: 42\n  }\n});\n\nfunction valuetext(value) {\n  return `${value} W`;\n}\n\nconst PrettoSlider = withStyles({\n  root: {\n    color: \"#52af77\",\n    height: 8\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: \"#fff\",\n    border: \"4px solid currentColor\",\n    marginTop: -8,\n    marginLeft: -12,\n    \"&:focus,&:hover,&$active\": {\n      boxShadow: \"inherit\"\n    }\n  },\n  active: {},\n  track: {\n    height: 24,\n    borderRadius: 24\n  },\n  rail: {\n    height: 24,\n    borderRadius: 24,\n    opacity: 1\n  }\n})(Slider);\nexport default function VerticalSlider() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(30);\n\n  const handleSliderChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = event => {\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleBlur = () => {\n    if (value < 0) {\n      setValue(0);\n    } else if (value > 100) {\n      setValue(100);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PrettoSlider, {\n    orientation: \"vertical\",\n    getAriaValueText: valuetext,\n    defaultValue: 0,\n    value: typeof value === 'number' ? value : 0,\n    onChange: handleSliderChange,\n    \"aria-labelledby\": \"vertical-slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    className: classes.input,\n    value: value,\n    margin: \"dense\",\n    onChange: handleInputChange,\n    onBlur: handleBlur,\n    inputProps: {\n      step: 10,\n      min: 0,\n      max: 100,\n      type: 'number',\n      'aria-labelledby': 'input-slider'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/enrique/projects/prueba/src/DetailMenu/VerticalSlider.js"],"names":["React","Typography","Input","Slider","Box","withStyles","makeStyles","useStyles","root","display","flexDirection","height","slider","marginBottom","margin","theme","spacing","input","width","valuetext","value","PrettoSlider","color","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","track","borderRadius","rail","opacity","VerticalSlider","classes","setValue","useState","handleSliderChange","event","newValue","handleInputChange","target","Number","handleBlur","step","min","max","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Input from '@material-ui/core/Input';\nimport Slider from '@material-ui/core/Slider';\nimport Box from '@material-ui/core/Box';\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: 400\n    },\n    slider: {\n        height: 10,\n        marginBottom: '20px',\n    },\n    margin: {\n        height: theme.spacing(3)\n    },\n    input: {\n        width: 42,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value} W`;\n}\n\nconst PrettoSlider = withStyles({\n    root: {\n        color: \"#52af77\",\n        height: 8\n    },\n    thumb: {\n        height: 24,\n        width: 24,\n        backgroundColor: \"#fff\",\n        border: \"4px solid currentColor\",\n        marginTop: -8,\n        marginLeft: -12,\n        \"&:focus,&:hover,&$active\": {\n            boxShadow: \"inherit\"\n        }\n    },\n    active: {},\n    track: {\n        height: 24,\n        borderRadius: 24\n    },\n    rail: {\n        height: 24,\n        borderRadius: 24,\n        opacity: 1\n    }\n})(Slider);\n\nexport default function VerticalSlider() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(30);\n\n    const handleSliderChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleInputChange = (event) => {\n        setValue(event.target.value === '' ? '' : Number(event.target.value));\n    };\n\n    const handleBlur = () => {\n        if (value < 0) {\n            setValue(0);\n        } else if (value > 100) {\n            setValue(100);\n        }\n    };\n\n\n    return (\n        <Box className={classes.root}>\n            <PrettoSlider\n                orientation=\"vertical\"\n                getAriaValueText={valuetext}\n                defaultValue={0}\n                value={typeof value === 'number' ? value : 0}\n                onChange={handleSliderChange}\n                aria-labelledby=\"vertical-slider\"\n            />\n            <Input\n                className={classes.input}\n                value={value}\n                margin=\"dense\"\n                onChange={handleInputChange}\n                onBlur={handleBlur}\n                inputProps={{\n                    step: 10,\n                    min: 0,\n                    max: 100,\n                    type: 'number',\n                    'aria-labelledby': 'input-slider',\n                }}\n            />\n\n        </Box>\n\n    );\n}"]},"metadata":{},"sourceType":"module"}