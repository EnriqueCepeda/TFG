{"ast":null,"code":"import { ADD_BUILDING, REMOVE_BUILDING, UPDATE_BUILDING_TYPE } from '../actions/types';\nconst initialState = {\n  'Building 1234': {\n    latitude: \"38.98626\",\n    longitude: \"-3.92907\",\n    area: \"200 m2\",\n    type: 'Both'\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_BUILDING_TYPE:\n      {\n        let stateCloned = Object.assign({}, state);\n        stateCloned[action.building_id].type = action.building_type;\n        return stateCloned;\n      }\n\n    case ADD_BUILDING:\n      {\n        let stateCloned = Object.assign({}, state);\n        stateCloned[action.building_data.id] = {\n          latitude: action.building_data.latitude,\n          longitude: action.building_data.longitude,\n          area: action.building_data.area,\n          type: 'Both'\n        };\n        return stateCloned;\n      }\n\n    case REMOVE_BUILDING:\n      {\n        let stateCloned = Object.assign({}, state);\n        delete stateCloned[action.building_id];\n        return stateCloned;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/enrique/projects/prueba/src/redux/reducers/buildingReducer.js"],"names":["ADD_BUILDING","REMOVE_BUILDING","UPDATE_BUILDING_TYPE","initialState","latitude","longitude","area","type","reducer","state","action","stateCloned","Object","assign","building_id","building_type","building_data","id"],"mappings":"AACA,SAASA,YAAT,EAAuBC,eAAvB,EAAwCC,oBAAxC,QAAoE,kBAApE;AAEA,MAAMC,YAAY,GAAG;AAAE,mBAAiB;AAAEC,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,SAAS,EAAE,UAAnC;AAA+CC,IAAAA,IAAI,EAAE,QAArD;AAA+DC,IAAAA,IAAI,EAAE;AAArE;AAAnB,CAArB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACH,IAAf;AACI,SAAKL,oBAAL;AAA2B;AACvB,YAAIS,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,CAAlB;AACAE,QAAAA,WAAW,CAACD,MAAM,CAACI,WAAR,CAAX,CAAgCP,IAAhC,GAAuCG,MAAM,CAACK,aAA9C;AACA,eAAOJ,WAAP;AACH;;AACD,SAAKX,YAAL;AACI;AACI,YAAIW,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,CAAlB;AACAE,QAAAA,WAAW,CAACD,MAAM,CAACM,aAAP,CAAqBC,EAAtB,CAAX,GAAuC;AACnCb,UAAAA,QAAQ,EAAEM,MAAM,CAACM,aAAP,CAAqBZ,QADI;AAEnCC,UAAAA,SAAS,EAAEK,MAAM,CAACM,aAAP,CAAqBX,SAFG;AAGnCC,UAAAA,IAAI,EAAEI,MAAM,CAACM,aAAP,CAAqBV,IAHQ;AAInCC,UAAAA,IAAI,EAAE;AAJ6B,SAAvC;AAMA,eAAOI,WAAP;AACH;;AACL,SAAKV,eAAL;AAAsB;AAClB,YAAIU,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,CAAlB;AACA,eAAOE,WAAW,CAACD,MAAM,CAACI,WAAR,CAAlB;AACA,eAAOH,WAAP;AACH;;AACD;AACI,aAAOF,KAAP;AAvBR;AA0BH,CA3BD;;AA8BA,eAAeD,OAAf","sourcesContent":["\nimport { ADD_BUILDING, REMOVE_BUILDING, UPDATE_BUILDING_TYPE } from '../actions/types'\n\nconst initialState = { 'Building 1234': { latitude: \"38.98626\", longitude: \"-3.92907\", area: \"200 m2\", type: 'Both' } };\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UPDATE_BUILDING_TYPE: {\n            let stateCloned = Object.assign({}, state);\n            stateCloned[action.building_id].type = action.building_type;\n            return stateCloned;\n        }\n        case ADD_BUILDING:\n            {\n                let stateCloned = Object.assign({}, state);\n                stateCloned[action.building_data.id] = {\n                    latitude: action.building_data.latitude,\n                    longitude: action.building_data.longitude,\n                    area: action.building_data.area,\n                    type: 'Both'\n                }\n                return stateCloned;\n            }\n        case REMOVE_BUILDING: {\n            let stateCloned = Object.assign({}, state);\n            delete stateCloned[action.building_id]\n            return stateCloned;\n        }\n        default:\n            return state;\n    }\n\n};\n\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}