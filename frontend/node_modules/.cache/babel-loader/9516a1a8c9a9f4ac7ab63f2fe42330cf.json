{"ast":null,"code":"import { ADD_BUILDING, REMOVE_BUILDING, UPDATE_BUILDING_TYPE, UPDATE_BUILDING_CONSUMPTION } from '../actions/types';\nconst initialState = {};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_BUILDING_TYPE:\n      {\n        let stateCloned = Object.assign({}, state);\n        stateCloned[action.building_id].type = action.building_type;\n        return stateCloned;\n      }\n\n    case UPDATE_BUILDING_CONSUMPTION:\n      {\n        let stateCloned = Object.assign({}, state);\n        stateCloned[action.building_id].consumption[action.hour] = action.value;\n        return stateCloned;\n      }\n\n    case ADD_BUILDING:\n      {\n        let stateCloned = Object.assign({}, state);\n        stateCloned[action.building_id] = action.building_data;\n        return stateCloned;\n      }\n\n    case REMOVE_BUILDING:\n      {\n        let stateCloned = Object.assign({}, state);\n        delete stateCloned[action.building_id];\n        return stateCloned;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/enrique/projects/TFG/src/redux/reducers/buildingReducer.js"],"names":["ADD_BUILDING","REMOVE_BUILDING","UPDATE_BUILDING_TYPE","UPDATE_BUILDING_CONSUMPTION","initialState","reducer","state","action","type","stateCloned","Object","assign","building_id","building_type","consumption","hour","value","building_data"],"mappings":"AACA,SAASA,YAAT,EAAuBC,eAAvB,EAAwCC,oBAAxC,EAA8DC,2BAA9D,QAAiG,kBAAjG;AAEA,MAAMC,YAAY,GAAG,EAArB;;AAGA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,oBAAL;AAA2B;AACvB,YAAIO,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,CAAlB;AACAG,QAAAA,WAAW,CAACF,MAAM,CAACK,WAAR,CAAX,CAAgCJ,IAAhC,GAAuCD,MAAM,CAACM,aAA9C;AACA,eAAOJ,WAAP;AACH;;AACD,SAAKN,2BAAL;AAAkC;AAC9B,YAAIM,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,CAAlB;AACAG,QAAAA,WAAW,CAACF,MAAM,CAACK,WAAR,CAAX,CAAgCE,WAAhC,CAA4CP,MAAM,CAACQ,IAAnD,IAA2DR,MAAM,CAACS,KAAlE;AACA,eAAOP,WAAP;AACH;;AACD,SAAKT,YAAL;AAAmB;AACf,YAAIS,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,CAAlB;AACAG,QAAAA,WAAW,CAACF,MAAM,CAACK,WAAR,CAAX,GAAkCL,MAAM,CAACU,aAAzC;AACA,eAAOR,WAAP;AACH;;AACD,SAAKR,eAAL;AAAsB;AAClB,YAAIQ,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,CAAlB;AACA,eAAOG,WAAW,CAACF,MAAM,CAACK,WAAR,CAAlB;AACA,eAAOH,WAAP;AACH;;AACD;AACI,aAAOH,KAAP;AAtBR;AAyBH,CA1BD;;AA6BA,eAAeD,OAAf","sourcesContent":["\nimport { ADD_BUILDING, REMOVE_BUILDING, UPDATE_BUILDING_TYPE, UPDATE_BUILDING_CONSUMPTION } from '../actions/types'\n\nconst initialState = {\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UPDATE_BUILDING_TYPE: {\n            let stateCloned = Object.assign({}, state);\n            stateCloned[action.building_id].type = action.building_type;\n            return stateCloned;\n        }\n        case UPDATE_BUILDING_CONSUMPTION: {\n            let stateCloned = Object.assign({}, state);\n            stateCloned[action.building_id].consumption[action.hour] = action.value;\n            return stateCloned;\n        }\n        case ADD_BUILDING: {\n            let stateCloned = Object.assign({}, state);\n            stateCloned[action.building_id] = action.building_data;\n            return stateCloned;\n        }\n        case REMOVE_BUILDING: {\n            let stateCloned = Object.assign({}, state);\n            delete stateCloned[action.building_id]\n            return stateCloned;\n        }\n        default:\n            return state;\n    }\n\n};\n\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}