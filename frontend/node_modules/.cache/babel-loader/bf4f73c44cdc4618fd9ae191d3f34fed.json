{"ast":null,"code":"var _jsxFileName = \"/home/enrique/projects/prueba/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport \"ol/ol.css\";\nimport './App.css';\nimport Map from \"./Map\";\nimport { Layers, TileLayer, VectorLayer } from \"./Layers\";\nimport { Fill, Stroke, Style } from 'ol/style';\nimport { osm } from \"./Source\";\nimport { fromLonLat } from 'ol/proj';\nimport { Controls, FullScreenControl, ZoomControl } from \"./Controls\";\nimport { BuildingCard, BuildingContainer } from './BuildingMenu';\nimport 'fontsource-roboto';\nlet styles = {\n  'Default': new Style({\n    stroke: new Stroke({\n      color: 'red',\n      width: 1\n    }),\n    fill: new Fill({\n      color: 'rgba(255, 242, 175, 0.5)'\n    })\n  }),\n  'BuildingHighlight': new Style({\n    fill: new Fill({\n      color: 'rgba(255,255,255,0.7)'\n    }),\n    stroke: new Stroke({\n      color: '#3399CC',\n      width: 3\n    })\n  })\n};\n\nconst App = () => {\n  const [center, setCenter] = useState([-3.92907, 38.98626]);\n  const [zoom, setZoom] = useState(18);\n  const [buildingList, setBuildiList] = useState([]);\n\n  const handleSelectBuilding = building => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    center: fromLonLat(center),\n    zoom: zoom,\n    onClickHandler: handleSelectBuilding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Layers, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    source: osm(),\n    zIndex: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(VectorLayer, {\n    style: styles.Default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Controls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FullScreenControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(ZoomControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }\n  }))), /*#__PURE__*/React.createElement(BuildingContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(BuildingCard, {\n    latitude: \"38.98626\",\n    longitude: \"-3.92907\",\n    area: \"200 m2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(BuildingCard, {\n    latitude: \"38.98626\",\n    longitude: \"-3.92907\",\n    area: \"200 m2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/enrique/projects/prueba/src/App.js"],"names":["React","useState","useEffect","Map","Layers","TileLayer","VectorLayer","Fill","Stroke","Style","osm","fromLonLat","Controls","FullScreenControl","ZoomControl","BuildingCard","BuildingContainer","styles","stroke","color","width","fill","App","center","setCenter","zoom","setZoom","buildingList","setBuildiList","handleSelectBuilding","building","Default"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"ol/ol.css\"\nimport './App.css';\nimport Map from \"./Map\";\nimport { Layers, TileLayer, VectorLayer } from \"./Layers\";\nimport { Fill, Stroke, Style } from 'ol/style';\nimport { osm } from \"./Source\";\nimport { fromLonLat } from 'ol/proj';\nimport { Controls, FullScreenControl, ZoomControl } from \"./Controls\";\nimport { BuildingCard, BuildingContainer } from './BuildingMenu';\nimport 'fontsource-roboto';\n\n\nlet styles = {\n\t'Default': new Style({\n\t\tstroke: new Stroke({\n\t\t\tcolor: 'red',\n\t\t\twidth: 1,\n\t\t}),\n\t\tfill: new Fill({\n\t\t\tcolor: 'rgba(255, 242, 175, 0.5)',\n\t\t}),\n\t}),\n\t'BuildingHighlight': new Style({\n\t\tfill: new Fill({\n\t\t\tcolor: 'rgba(255,255,255,0.7)',\n\t\t}),\n\t\tstroke: new Stroke({\n\t\t\tcolor: '#3399CC',\n\t\t\twidth: 3,\n\t\t}),\n\t}),\n};\n\nconst App = () => {\n\n\tconst [center, setCenter] = useState([-3.92907, 38.98626]);\n\tconst [zoom, setZoom] = useState(18);\n\tconst [buildingList, setBuildiList] = useState([]);\n\n\tconst handleSelectBuilding = (building) => {\n\n\n\t}\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<Map center={fromLonLat(center)} zoom={zoom} onClickHandler={handleSelectBuilding}>\n\t\t\t\t<Layers>\n\t\t\t\t\t<TileLayer\n\t\t\t\t\t\tsource={osm()}\n\t\t\t\t\t\tzIndex={0}\n\t\t\t\t\t/>\n\t\t\t\t\t<VectorLayer\n\t\t\t\t\t\tstyle={styles.Default}\n\t\t\t\t\t/>\n\t\t\t\t</Layers>\n\t\t\t\t<Controls>\n\t\t\t\t\t<FullScreenControl />\n\t\t\t\t\t<ZoomControl />\n\t\t\t\t</Controls>\n\t\t\t</Map>\n\t\t\t<BuildingContainer>\n\t\t\t\t<BuildingCard latitude=\"38.98626\" longitude=\"-3.92907\" area=\"200 m2\" />\n\t\t\t\t<BuildingCard latitude=\"38.98626\" longitude=\"-3.92907\" area=\"200 m2\" />\n\t\t\t</BuildingContainer>\n\t\t</div>\n\t)\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}