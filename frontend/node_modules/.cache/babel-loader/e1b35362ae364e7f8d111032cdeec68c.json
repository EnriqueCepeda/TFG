{"ast":null,"code":"var _jsxFileName = \"/home/enrique/projects/prueba/src/Map/Map.js\";\nimport \"./Map.css\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport MapContext from \"./MapContext\";\nimport { View as olView, Map as olMap } from \"ol\";\nimport { fromLonLat } from 'ol/proj';\n\nconst Map = ({\n  children,\n  zoom,\n  center\n}) => {\n  const mapRef = useRef();\n  const [map, setMap] = useState(null); // on component mount\n\n  useEffect(() => {\n    let lonLatCenter = fromLonLat(center);\n    let view_options = {\n      zoom,\n      lonLatCenter\n    };\n    let options = {\n      view: new olView(view_options),\n      layers: [],\n      controls: [],\n      overlays: []\n    };\n    let mapObject = new olMap(options);\n    mapObject.setTarget(mapRef.current);\n    setMap(mapObject);\n    return () => mapObject.setTarget(undefined);\n  }, []); // zoom change handler\n\n  useEffect(() => {\n    if (!map) return;\n    map.getView().setZoom(zoom);\n  }, [zoom]); // center change handler\n\n  useEffect(() => {\n    if (!map) return;\n    map.getView().setCenter(center);\n  }, [center]);\n  return /*#__PURE__*/React.createElement(MapContext.Provider, {\n    value: {\n      map\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapRef,\n    className: \"ol-map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }, children));\n};\n\nexport default Map;","map":{"version":3,"sources":["/home/enrique/projects/prueba/src/Map/Map.js"],"names":["React","useRef","useState","useEffect","MapContext","View","olView","Map","olMap","fromLonLat","children","zoom","center","mapRef","map","setMap","lonLatCenter","view_options","options","view","layers","controls","overlays","mapObject","setTarget","current","undefined","getView","setZoom","setCenter"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,IAAI,IAAIC,MAAjB,EAAyBC,GAAG,IAAIC,KAAhC,QAA6C,IAA7C;AACA,SAASC,UAAT,QAA2B,SAA3B;;AAGA,MAAMF,GAAG,GAAG,CAAC;AAAEG,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA;AAAlB,CAAD,KAAgC;AAC3C,QAAMC,MAAM,GAAGZ,MAAM,EAArB;AACA,QAAM,CAACa,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,IAAD,CAA9B,CAF2C,CAG3C;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIa,YAAY,GAAGP,UAAU,CAACG,MAAD,CAA7B;AACA,QAAIK,YAAY,GAAG;AAAEN,MAAAA,IAAF;AAAQK,MAAAA;AAAR,KAAnB;AACA,QAAIE,OAAO,GAAG;AACbC,MAAAA,IAAI,EAAE,IAAIb,MAAJ,CAAWW,YAAX,CADO;AAEbG,MAAAA,MAAM,EAAE,EAFK;AAGbC,MAAAA,QAAQ,EAAE,EAHG;AAIbC,MAAAA,QAAQ,EAAE;AAJG,KAAd;AAOA,QAAIC,SAAS,GAAG,IAAIf,KAAJ,CAAUU,OAAV,CAAhB;AACAK,IAAAA,SAAS,CAACC,SAAV,CAAoBX,MAAM,CAACY,OAA3B;AACAV,IAAAA,MAAM,CAACQ,SAAD,CAAN;AAEA,WAAO,MAAMA,SAAS,CAACC,SAAV,CAAoBE,SAApB,CAAb;AACA,GAfQ,EAeN,EAfM,CAAT,CAJ2C,CAqB3C;;AACAvB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI,CAACW,GAAL,EAAU;AAEVA,IAAAA,GAAG,CAACa,OAAJ,GAAcC,OAAd,CAAsBjB,IAAtB;AACA,GAJQ,EAIN,CAACA,IAAD,CAJM,CAAT,CAtB2C,CA4B3C;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI,CAACW,GAAL,EAAU;AAEVA,IAAAA,GAAG,CAACa,OAAJ,GAAcE,SAAd,CAAwBjB,MAAxB;AACA,GAJQ,EAIN,CAACA,MAAD,CAJM,CAAT;AAMA,sBACC,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAEE,MAAAA;AAAF,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,GAAG,EAAED,MAAV;AAAkB,IAAA,SAAS,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,QADF,CADD,CADD;AAOA,CA1CD;;AA4CA,eAAeH,GAAf","sourcesContent":["import \"./Map.css\"\nimport React, { useRef, useState, useEffect } from \"react\"\nimport MapContext from \"./MapContext\";\nimport { View as olView, Map as olMap } from \"ol\";\nimport { fromLonLat } from 'ol/proj'\n\n\nconst Map = ({ children, zoom, center }) => {\n\tconst mapRef = useRef();\n\tconst [map, setMap] = useState(null);\n\t// on component mount\n\tuseEffect(() => {\n\t\tlet lonLatCenter = fromLonLat(center);\n\t\tlet view_options = { zoom, lonLatCenter };\n\t\tlet options = {\n\t\t\tview: new olView(view_options),\n\t\t\tlayers: [],\n\t\t\tcontrols: [],\n\t\t\toverlays: []\n\t\t};\n\n\t\tlet mapObject = new olMap(options);\n\t\tmapObject.setTarget(mapRef.current);\n\t\tsetMap(mapObject);\n\n\t\treturn () => mapObject.setTarget(undefined);\n\t}, []);\n\n\t// zoom change handler\n\tuseEffect(() => {\n\t\tif (!map) return;\n\n\t\tmap.getView().setZoom(zoom);\n\t}, [zoom]);\n\n\t// center change handler\n\tuseEffect(() => {\n\t\tif (!map) return;\n\n\t\tmap.getView().setCenter(center)\n\t}, [center])\n\n\treturn (\n\t\t<MapContext.Provider value={{ map }}>\n\t\t\t<div ref={mapRef} className=\"ol-map\">\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</MapContext.Provider>\n\t)\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}