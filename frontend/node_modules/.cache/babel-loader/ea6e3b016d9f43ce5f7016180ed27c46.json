{"ast":null,"code":"var _jsxFileName = \"/home/enrique/projects/prueba/src/Map/Map.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport MapContext from \"./MapContext\";\nimport { View as olView, Map as olMap } from \"ol\";\nimport { Box } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MouseWheelZoom, defaults as defaultInteractions } from 'ol/interaction';\nimport { Mouse } from \"@material-ui/icons\";\nconst useStyles = makeStyles(() => ({\n  olMap: {\n    flex: 7,\n    overflow: \"hidden\"\n  }\n}));\n\nconst Map = ({\n  children,\n  zoom,\n  center\n}) => {\n  const classes = useStyles();\n  const mapRef = useRef();\n  const [map, setMap] = useState(null); // on component mount\n\n  useEffect(() => {\n    let options = {\n      view: new olView({\n        zoom,\n        center\n      }),\n      layers: [],\n      controls: []\n    };\n    let mapObject = new olMap(options);\n    mapObject.setTarget(mapRef.current);\n    setMap(mapObject);\n    return () => mapObject.setTarget(undefined);\n  }, []); // zoom change handler\n\n  useEffect(() => {\n    if (!map) return;\n    map.getView().setZoom(zoom);\n  }, [zoom]); // center change handler\n\n  useEffect(() => {\n    if (!map) return;\n    map.getView().setCenter(center);\n  }, [center]);\n  return /*#__PURE__*/React.createElement(MapContext.Provider, {\n    value: {\n      map\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    ref: mapRef,\n    className: classes.olMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }, children));\n};\n\nexport default Map;","map":{"version":3,"sources":["/home/enrique/projects/prueba/src/Map/Map.js"],"names":["React","useRef","useState","useEffect","MapContext","View","olView","Map","olMap","Box","makeStyles","MouseWheelZoom","defaults","defaultInteractions","Mouse","useStyles","flex","overflow","children","zoom","center","classes","mapRef","map","setMap","options","view","layers","controls","mapObject","setTarget","current","undefined","getView","setZoom","setCenter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,IAAI,IAAIC,MAAjB,EAAyBC,GAAG,IAAIC,KAAhC,QAA6C,IAA7C;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SACCC,cADD,EAECC,QAAQ,IAAIC,mBAFb,QAGO,gBAHP;AAIA,SAASC,KAAT,QAAsB,oBAAtB;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAC,OAAO;AACnCF,EAAAA,KAAK,EAAE;AACNQ,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,QAAQ,EAAE;AAFJ;AAD4B,CAAP,CAAD,CAA5B;;AAOA,MAAMV,GAAG,GAAG,CAAC;AAAEW,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA;AAAlB,CAAD,KAAgC;AAC3C,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAMO,MAAM,GAAGrB,MAAM,EAArB;AACA,QAAM,CAACsB,GAAD,EAAMC,MAAN,IAAgBtB,QAAQ,CAAC,IAAD,CAA9B,CAH2C,CAM3C;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIsB,OAAO,GAAG;AACbC,MAAAA,IAAI,EAAE,IAAIpB,MAAJ,CAAW;AAAEa,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAX,CADO;AAEbO,MAAAA,MAAM,EAAE,EAFK;AAGbC,MAAAA,QAAQ,EAAE;AAHG,KAAd;AAKA,QAAIC,SAAS,GAAG,IAAIrB,KAAJ,CAAUiB,OAAV,CAAhB;AACAI,IAAAA,SAAS,CAACC,SAAV,CAAoBR,MAAM,CAACS,OAA3B;AACAP,IAAAA,MAAM,CAACK,SAAD,CAAN;AAEA,WAAO,MAAMA,SAAS,CAACC,SAAV,CAAoBE,SAApB,CAAb;AACA,GAXQ,EAWN,EAXM,CAAT,CAP2C,CAoB3C;;AACA7B,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI,CAACoB,GAAL,EAAU;AAEVA,IAAAA,GAAG,CAACU,OAAJ,GAAcC,OAAd,CAAsBf,IAAtB;AACA,GAJQ,EAIN,CAACA,IAAD,CAJM,CAAT,CArB2C,CA2B3C;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI,CAACoB,GAAL,EAAU;AAEVA,IAAAA,GAAG,CAACU,OAAJ,GAAcE,SAAd,CAAwBf,MAAxB;AACA,GAJQ,EAIN,CAACA,MAAD,CAJM,CAAT;AAMA,sBACC,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAEG,MAAAA;AAAF,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAED,MAAV;AAAkB,IAAA,SAAS,EAAED,OAAO,CAACb,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEU,QADF,CADD,CADD;AAOA,CAzCD;;AA2CA,eAAeX,GAAf","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\"\nimport MapContext from \"./MapContext\";\nimport { View as olView, Map as olMap } from \"ol\";\nimport { Box } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n\tMouseWheelZoom,\n\tdefaults as defaultInteractions,\n} from 'ol/interaction';\nimport { Mouse } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(() => ({\n\tolMap: {\n\t\tflex: 7,\n\t\toverflow: \"hidden\"\n\t},\n}));\n\nconst Map = ({ children, zoom, center }) => {\n\tconst classes = useStyles();\n\tconst mapRef = useRef();\n\tconst [map, setMap] = useState(null);\n\n\n\t// on component mount\n\tuseEffect(() => {\n\t\tlet options = {\n\t\t\tview: new olView({ zoom, center }),\n\t\t\tlayers: [],\n\t\t\tcontrols: [],\n\t\t};\n\t\tlet mapObject = new olMap(options);\n\t\tmapObject.setTarget(mapRef.current);\n\t\tsetMap(mapObject);\n\n\t\treturn () => mapObject.setTarget(undefined);\n\t}, []);\n\n\t// zoom change handler\n\tuseEffect(() => {\n\t\tif (!map) return;\n\n\t\tmap.getView().setZoom(zoom);\n\t}, [zoom]);\n\n\t// center change handler\n\tuseEffect(() => {\n\t\tif (!map) return;\n\n\t\tmap.getView().setCenter(center)\n\t}, [center])\n\n\treturn (\n\t\t<MapContext.Provider value={{ map }}>\n\t\t\t<Box ref={mapRef} className={classes.olMap}>\n\t\t\t\t{children}\n\t\t\t</Box>\n\t\t</MapContext.Provider>\n\t)\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}